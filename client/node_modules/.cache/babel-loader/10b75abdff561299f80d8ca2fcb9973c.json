{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Home/PopUpToast.js\";\nimport React from 'react';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport JoinCreateChannelInput from './JoinCreateChannelInput';\nimport { useField } from '../../hooks/useField';\n\nconst PopupToast = ({\n  emitCreateChannel,\n  emitJoinChannel,\n  show,\n  toggleForm\n}) => {\n  const channelName = useField('text');\n  const channelLink = useField('text');\n\n  const handleClose = () => toggleForm(false);\n\n  const handleShow = () => toggleForm(true);\n\n  const createChannel = async e => {\n    e.preventDefault();\n    emitCreateChannel(channelName.value);\n    channelName.reset();\n    handleClose();\n  };\n\n  const joinChannel = e => {\n    e.preventDefault();\n    emitJoinChannel(channelLink.value);\n    channelLink.reset();\n    handleClose();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    className: \"newChannelModal\",\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"New Channel\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"seperate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"createChannelForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '20px',\n      color: 'rgb(60, 163, 116)',\n      margin: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"CREATE\"), React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '12px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Create a new server and invite your friends!\"), React.createElement(\"div\", {\n    className: \"createChannelImageContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"joinChannelImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"input\", Object.assign({}, channelName, {\n    reset: undefined,\n    placeholder: \"Channel Name\",\n    onKeyPress: e => e.key === 'Enter' ? createChannel(e) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"createChannelButton\",\n    type: \"button\",\n    onClick: e => createChannel(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Create\")), React.createElement(\"form\", {\n    className: \"joinChannelForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '20px',\n      color: 'rgb(114, 137, 218)',\n      margin: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"JOIN\"), React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '12px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Enter an invite and join your friends server!\"), React.createElement(\"div\", {\n    className: \"createChannelImageContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"createChannelImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"input\", Object.assign({}, channelLink, {\n    reset: undefined,\n    placeholder: \"Channel Link\",\n    onKeyPress: e => e.key === 'Enter' ? joinChannel(e) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"joinChannelButton\",\n    type: \"button\",\n    onClick: e => joinChannel(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Join\")))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n};\n\nexport default PopupToast;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/PopUpToast.js"],"names":["React","Toast","Modal","Button","JoinCreateChannelInput","useField","PopupToast","emitCreateChannel","emitJoinChannel","show","toggleForm","channelName","channelLink","handleClose","handleShow","createChannel","e","preventDefault","value","reset","joinChannel","textAlign","fontSize","color","margin","undefined","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,iBADkB;AACCC,EAAAA,eADD;AACkBC,EAAAA,IADlB;AACwBC,EAAAA;AADxB,CAAD,KAEb;AACJ,QAAMC,WAAW,GAAGN,QAAQ,CAAC,MAAD,CAA5B;AACA,QAAMO,WAAW,GAAGP,QAAQ,CAAC,MAAD,CAA5B;;AAEA,QAAMQ,WAAW,GAAG,MAAMH,UAAU,CAAC,KAAD,CAApC;;AACA,QAAMI,UAAU,GAAG,MAAMJ,UAAU,CAAC,IAAD,CAAnC;;AAGA,QAAMK,aAAa,GAAG,MAAOC,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,iBAAiB,CAACI,WAAW,CAACO,KAAb,CAAjB;AACAP,IAAAA,WAAW,CAACQ,KAAZ;AACAN,IAAAA,WAAW;AACZ,GALD;;AAOA,QAAMO,WAAW,GAAIJ,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,eAAe,CAACI,WAAW,CAACM,KAAb,CAAf;AACAN,IAAAA,WAAW,CAACO,KAAZ;AACAN,IAAAA,WAAW;AACZ,GALD;;AAMA,SACE,0CACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAmC,IAAA,IAAI,EAAEJ,IAAzC;AAA+C,IAAA,MAAM,EAAEI,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAE;AACRQ,MAAAA,SAAS,EAAE,QADH;AACaC,MAAAA,QAAQ,EAAE,MADvB;AAC+BC,MAAAA,KAAK,EAAE,mBADtC;AAC2DC,MAAAA,MAAM,EAAE;AADnE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOE;AAAG,IAAA,KAAK,EAAE;AAAEH,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAPF,EAQE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EAqBE,+CACMX,WADN;AAEE,IAAA,KAAK,EAAEc,SAFT;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,UAAU,EAAGT,CAAD,IAAQA,CAAC,CAACU,GAAF,KAAU,OAAV,GAAoBX,aAAa,CAACC,CAAD,CAAjC,GAAuC,IAJ7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBF,EA2BE;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,IAAI,EAAC,QAA7C;AAAsD,IAAA,OAAO,EAAGA,CAAD,IAAOD,aAAa,CAACC,CAAD,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,CADF,EAgCE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAE;AACRK,MAAAA,SAAS,EAAE,QADH;AACaC,MAAAA,QAAQ,EAAE,MADvB;AAC+BC,MAAAA,KAAK,EAAE,oBADtC;AAC4DC,MAAAA,MAAM,EAAE;AADpE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOE;AAAG,IAAA,KAAK,EAAE;AAAEH,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAPF,EAQE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EAqBE,+CACMV,WADN;AAEE,IAAA,KAAK,EAAEa,SAFT;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,UAAU,EAAGT,CAAD,IAAQA,CAAC,CAACU,GAAF,KAAU,OAAV,GAAoBN,WAAW,CAACJ,CAAD,CAA/B,GAAqC,IAJ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBF,EA2BE;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAoD,IAAA,OAAO,EAAGA,CAAD,IAAOI,WAAW,CAACJ,CAAD,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,CAhCF,CADF,CAJF,EAsEE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtEF,CADF,CADF;AA6ED,CApGD;;AAsGA,eAAeV,UAAf","sourcesContent":["import React from 'react';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport JoinCreateChannelInput from './JoinCreateChannelInput';\nimport { useField } from '../../hooks/useField';\n\nconst PopupToast = ({\n  emitCreateChannel, emitJoinChannel, show, toggleForm,\n}) => {\n  const channelName = useField('text');\n  const channelLink = useField('text');\n\n  const handleClose = () => toggleForm(false);\n  const handleShow = () => toggleForm(true);\n\n\n  const createChannel = async (e) => {\n    e.preventDefault();\n    emitCreateChannel(channelName.value);\n    channelName.reset();\n    handleClose()\n  };\n\n  const joinChannel = (e) => {\n    e.preventDefault();\n    emitJoinChannel(channelLink.value);\n    channelLink.reset();\n    handleClose()\n  };\n  return (\n    <>\n      <Modal className=\"newChannelModal\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Channel</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"seperate\">\n            <form className=\"createChannelForm\">\n              <p style={{\n                textAlign: 'center', fontSize: '20px', color: 'rgb(60, 163, 116)', margin: '0',\n              }}\n              >\nCREATE\n              </p>\n              <p style={{ textAlign: 'center', fontSize: '12px' }}>Create a new server and invite your friends!</p>\n              <div className=\"createChannelImageContainer\">\n                <div className=\"joinChannelImage\" />\n              </div>\n              {/* <JoinCreateChannelInput\n                {...channelName}\n                reset={undefined}\n                name=\"Channel Name\"\n                placeholder=\"Channel Name\"\n                createChannel={createChannel}\n                id=\"outlined-basic\"\n                label=\"Channel Name\"\n                variant=\"outlined\">\n                </JoinCreateChannelInput> */}\n              <input\n                {...channelName}\n                reset={undefined}\n                placeholder=\"Channel Name\"\n                onKeyPress={(e) => (e.key === 'Enter' ? createChannel(e) : null)}\n              />\n              <button className=\"createChannelButton\" type=\"button\" onClick={(e) => createChannel(e)}>\n                Create\n              </button>\n            </form>\n            <form className=\"joinChannelForm\">\n              <p style={{\n                textAlign: 'center', fontSize: '20px', color: 'rgb(114, 137, 218)', margin: '0',\n              }}\n              >\nJOIN\n              </p>\n              <p style={{ textAlign: 'center', fontSize: '12px' }}>Enter an invite and join your friends server!</p>\n              <div className=\"createChannelImageContainer\">\n                <div className=\"createChannelImage\" />\n              </div>\n              {/* <JoinCreateChannelInput\n                {...channelLink}\n                reset={undefined}\n                name=\"Channel Link\"\n                handleJoinCreate={joinChannel}\n                placeholder=\"Channel Link\"\n                id=\"outlined-basic\"\n                label=\"Channel Link\"\n                variant=\"outlined\" >\n                </JoinCreateChannelInput> */}\n              <input\n                {...channelLink}\n                reset={undefined}\n                placeholder=\"Channel Link\"\n                onKeyPress={(e) => (e.key === 'Enter' ? joinChannel(e) : null)}\n              />\n              <button className=\"joinChannelButton\" type=\"button\" onClick={(e) => joinChannel(e)}>\n                Join\n              </button>\n            </form>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default PopupToast;\n"]},"metadata":{},"sourceType":"module"}