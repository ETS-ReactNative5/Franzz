{"ast":null,"code":"import _regeneratorRuntime from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/inherits\";/* eslint-disable no-return-assign */import React,{Component}from'react';var Canvas=/*#__PURE__*/function(_Component){_inherits(Canvas,_Component);// Different stroke styles to be used for user and guest\nfunction Canvas(props){var _this;_classCallCheck(this,Canvas);_this=_possibleConstructorReturn(this,_getPrototypeOf(Canvas).call(this,props));_this.isPainting=false;_this.userStrokeStyle='#EE92C2';_this.guestStrokeStyle='#F0C987';_this.line=[];_this.prevPos={offsetX:0,offsetY:0};_this.onMouseDown=_this.onMouseDown.bind(_assertThisInitialized(_this));_this.onMouseMove=_this.onMouseMove.bind(_assertThisInitialized(_this));_this.endPaintEvent=_this.endPaintEvent.bind(_assertThisInitialized(_this));_this.sendLine=props.sendLine.bind(_assertThisInitialized(_this));return _this;}_createClass(Canvas,[{key:\"componentDidMount\",value:function componentDidMount(){// Here we set up the properties of the canvas element.\nthis.canvas.width=700;this.canvas.height=459;this.ctx=this.canvas.getContext('2d');this.ctx.lineJoin='round';this.ctx.lineCap='round';this.ctx.lineWidth=5;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var _this2=this;var _this$props=this.props,currentUser=_this$props.currentUser,lines=_this$props.lines;if(lines!==undefined){Object.values(lines).forEach(function(_ref){var user=_ref.user,line=_ref.line;if(user!==currentUser){line.forEach(function(position){_this2.paint(position.start,position.stop,_this2.guestStrokeStyle);});}});}}},{key:\"onMouseDown\",value:function onMouseDown(_ref2){var nativeEvent=_ref2.nativeEvent;var offsetX=nativeEvent.offsetX,offsetY=nativeEvent.offsetY;this.isPainting=true;this.prevPos={offsetX:offsetX,offsetY:offsetY};}},{key:\"onMouseMove\",value:function onMouseMove(_ref3){var nativeEvent=_ref3.nativeEvent;if(this.isPainting){var offsetX=nativeEvent.offsetX,offsetY=nativeEvent.offsetY;var offSetData={offsetX:offsetX,offsetY:offsetY};// Set the start and stop position of the paint event.\nvar positionData={start:_objectSpread({},this.prevPos),stop:_objectSpread({},offSetData)};// Add the position to the line array\nthis.line=this.line.concat(positionData);this.paint(this.prevPos,offSetData,this.userStrokeStyle);}}},{key:\"endPaintEvent\",value:function endPaintEvent(){if(this.isPainting){this.isPainting=false;this.sendPaintData();}}},{key:\"paint\",value:function paint(prevPos,currPos,strokeStyle){var offsetX=currPos.offsetX,offsetY=currPos.offsetY;var x=prevPos.offsetX,y=prevPos.offsetY;this.ctx.beginPath();this.ctx.strokeStyle=strokeStyle;// Move the the prevPosition of the mouse\nthis.ctx.moveTo(x,y);// Draw a line to the current position of the mouse\nthis.ctx.lineTo(offsetX,offsetY);// Visualize the line using the strokeStyle\nthis.ctx.stroke();this.prevPos={offsetX:offsetX,offsetY:offsetY};}},{key:\"sendPaintData\",value:function(){var _sendPaintData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:this.sendLine(this.line);case 1:case\"end\":return _context.stop();}}},_callee,this);}));function sendPaintData(){return _sendPaintData.apply(this,arguments);}return sendPaintData;}()},{key:\"render\",value:function render(){var _this3=this;return React.createElement(React.Fragment,null,React.createElement(\"canvas\",{// We use the ref attribute to get direct access to the canvas element.\nref:function ref(_ref4){return _this3.canvas=_ref4;},style:{background:'black'},onMouseDown:this.onMouseDown,onMouseLeave:this.endPaintEvent,onMouseUp:this.endPaintEvent,onMouseMove:this.onMouseMove}));}}]);return Canvas;}(Component);export default Canvas;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Modules/Canvas/Canvas.js"],"names":["React","Component","Canvas","props","isPainting","userStrokeStyle","guestStrokeStyle","line","prevPos","offsetX","offsetY","onMouseDown","bind","onMouseMove","endPaintEvent","sendLine","canvas","width","height","ctx","getContext","lineJoin","lineCap","lineWidth","currentUser","lines","undefined","Object","values","forEach","user","position","paint","start","stop","nativeEvent","offSetData","positionData","concat","sendPaintData","currPos","strokeStyle","x","y","beginPath","moveTo","lineTo","stroke","ref","background"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\nimport React, { Component } from 'react';\n\nclass Canvas extends Component {\n      isPainting = false;\n\n      // Different stroke styles to be used for user and guest\n      userStrokeStyle = '#EE92C2';\n\n      guestStrokeStyle = '#F0C987';\n\n      line = [];\n\n      prevPos = { offsetX: 0, offsetY: 0 };\n\n      constructor(props) {\n        super(props);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.endPaintEvent = this.endPaintEvent.bind(this);\n        this.sendLine = props.sendLine.bind(this);\n      }\n\n      componentDidMount() {\n        // Here we set up the properties of the canvas element.\n        this.canvas.width = 700;\n        this.canvas.height = 459;\n        this.ctx = this.canvas.getContext('2d');\n        this.ctx.lineJoin = 'round';\n        this.ctx.lineCap = 'round';\n        this.ctx.lineWidth = 5;\n      }\n\n      componentDidUpdate() {\n        const { currentUser, lines } = this.props;\n        if (lines !== undefined) {\n          Object.values(lines).forEach(({ user, line }) => {\n            if (user !== currentUser) {\n              line.forEach((position) => {\n                this.paint(position.start, position.stop, this.guestStrokeStyle);\n              });\n            }\n          });\n        }\n      }\n\n\n      onMouseDown({ nativeEvent }) {\n        const { offsetX, offsetY } = nativeEvent;\n        this.isPainting = true;\n        this.prevPos = { offsetX, offsetY };\n      }\n\n      onMouseMove({ nativeEvent }) {\n        if (this.isPainting) {\n          const { offsetX, offsetY } = nativeEvent;\n          const offSetData = { offsetX, offsetY };\n          // Set the start and stop position of the paint event.\n          const positionData = {\n            start: { ...this.prevPos },\n            stop: { ...offSetData },\n          };\n          // Add the position to the line array\n          this.line = this.line.concat(positionData);\n          this.paint(this.prevPos, offSetData, this.userStrokeStyle);\n        }\n      }\n\n      endPaintEvent() {\n        if (this.isPainting) {\n          this.isPainting = false;\n          this.sendPaintData();\n        }\n      }\n\n      paint(prevPos, currPos, strokeStyle) {\n        const { offsetX, offsetY } = currPos;\n        const { offsetX: x, offsetY: y } = prevPos;\n\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = strokeStyle;\n        // Move the the prevPosition of the mouse\n        this.ctx.moveTo(x, y);\n        // Draw a line to the current position of the mouse\n        this.ctx.lineTo(offsetX, offsetY);\n        // Visualize the line using the strokeStyle\n        this.ctx.stroke();\n        this.prevPos = { offsetX, offsetY };\n      }\n\n      async sendPaintData() {\n        this.sendLine(this.line);\n      }\n\n      render() {\n        return (\n          <>\n            <canvas\n            // We use the ref attribute to get direct access to the canvas element.\n              ref={(ref) => (this.canvas = ref)}\n              style={{ background: 'black' }}\n              onMouseDown={this.onMouseDown}\n              onMouseLeave={this.endPaintEvent}\n              onMouseUp={this.endPaintEvent}\n              onMouseMove={this.onMouseMove}\n            />\n          </>\n        );\n      }\n}\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}