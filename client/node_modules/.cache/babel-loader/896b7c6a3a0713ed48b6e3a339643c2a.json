{"ast":null,"code":"import React,{useEffect}from'react';import YouTube from'react-youtube';var player;var YoutubeVideoPlayer=function YoutubeVideoPlayer(_ref){var currentVideo=_ref.currentVideo,changeVideoState=_ref.changeVideoState,paused=_ref.paused,played=_ref.played,channel=_ref.channel,syncVideo=_ref.syncVideo,timeStamp=_ref.timeStamp;function onReady(event){player=event.target;if(timeStamp&&player.b){player.seekTo(timeStamp,true);}syncVideo(player.getCurrentTime(),channel);if(paused){event.target.pauseVideo();}event.target.playVideo();}useEffect(function(){if(paused&&player&&player.b){player.pauseVideo();}else if(played&&player&&player.b){player.playVideo();}},[paused,played]);useEffect(function(){if(timeStamp&&player&&player.b){if(Math.abs(player.getCurrentTime()-timeStamp)>1){player.seekTo(timeStamp,true);}}},[timeStamp]);function onPlayerStateChange(event){var state=event.data;syncVideo(player.getCurrentTime(),channel);if(state===1){// if the video is playing\nchangeVideoState(currentVideo,channel,false,true);}else if(state===2){// if the video is paused\nchangeVideoState(currentVideo,channel,true,false);}}var opts={height:'500',width:'840',playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};return React.createElement(YouTube,{id:\"youtube-player\",videoId:currentVideo,opts:opts,onReady:onReady,onStateChange:onPlayerStateChange});};export default YoutubeVideoPlayer;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Modules/VideoSync/YoutubeVideoPlayer.js"],"names":["React","useEffect","YouTube","player","YoutubeVideoPlayer","currentVideo","changeVideoState","paused","played","channel","syncVideo","timeStamp","onReady","event","target","b","seekTo","getCurrentTime","pauseVideo","playVideo","Math","abs","onPlayerStateChange","state","data","opts","height","width","playerVars","autoplay"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAEA,GAAIC,CAAAA,MAAJ,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAErB,IADJC,CAAAA,YACI,MADJA,YACI,CADUC,gBACV,MADUA,gBACV,CAD4BC,MAC5B,MAD4BA,MAC5B,CADoCC,MACpC,MADoCA,MACpC,CAD4CC,OAC5C,MAD4CA,OAC5C,CADqDC,SACrD,MADqDA,SACrD,CADgEC,SAChE,MADgEA,SAChE,CACJ,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtBV,MAAM,CAAGU,KAAK,CAACC,MAAf,CACA,GAAIH,SAAS,EAAIR,MAAM,CAACY,CAAxB,CAA2B,CACzBZ,MAAM,CAACa,MAAP,CAAcL,SAAd,CAAyB,IAAzB,EACD,CACDD,SAAS,CAACP,MAAM,CAACc,cAAP,EAAD,CAA0BR,OAA1B,CAAT,CACA,GAAIF,MAAJ,CAAY,CACVM,KAAK,CAACC,MAAN,CAAaI,UAAb,GACD,CACDL,KAAK,CAACC,MAAN,CAAaK,SAAb,GACD,CAEDlB,SAAS,CAAC,UAAM,CACd,GAAIM,MAAM,EAAIJ,MAAV,EAAoBA,MAAM,CAACY,CAA/B,CAAkC,CAChCZ,MAAM,CAACe,UAAP,GACD,CAFD,IAEO,IAAIV,MAAM,EAAIL,MAAV,EAAoBA,MAAM,CAACY,CAA/B,CAAkC,CACvCZ,MAAM,CAACgB,SAAP,GACD,CACF,CANQ,CAMN,CAACZ,MAAD,CAASC,MAAT,CANM,CAAT,CAQAP,SAAS,CAAC,UAAM,CACd,GAAIU,SAAS,EAAIR,MAAb,EAAuBA,MAAM,CAACY,CAAlC,CAAqC,CACnC,GAAIK,IAAI,CAACC,GAAL,CAASlB,MAAM,CAACc,cAAP,GAA0BN,SAAnC,EAAgD,CAApD,CAAuD,CACrDR,MAAM,CAACa,MAAP,CAAcL,SAAd,CAAyB,IAAzB,EACD,CACF,CACF,CANQ,CAMN,CAACA,SAAD,CANM,CAAT,CAQA,QAASW,CAAAA,mBAAT,CAA6BT,KAA7B,CAAoC,CAClC,GAAMU,CAAAA,KAAK,CAAGV,KAAK,CAACW,IAApB,CACAd,SAAS,CAACP,MAAM,CAACc,cAAP,EAAD,CAA0BR,OAA1B,CAAT,CAEA,GAAIc,KAAK,GAAK,CAAd,CAAiB,CAAE;AACjBjB,gBAAgB,CAACD,YAAD,CAAeI,OAAf,CAAwB,KAAxB,CAA+B,IAA/B,CAAhB,CACD,CAFD,IAEO,IAAIc,KAAK,GAAK,CAAd,CAAiB,CAAE;AACxBjB,gBAAgB,CAACD,YAAD,CAAeI,OAAf,CAAwB,IAAxB,CAA8B,KAA9B,CAAhB,CACD,CACF,CAED,GAAMgB,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAE,KADG,CAEXC,KAAK,CAAE,KAFI,CAGXC,UAAU,CAAE,CAAE;AACZC,QAAQ,CAAE,CADA,CAHD,CAAb,CAQA,MACE,qBAAC,OAAD,EACE,EAAE,CAAC,gBADL,CAEE,OAAO,CAAExB,YAFX,CAGE,IAAI,CAAEoB,IAHR,CAIE,OAAO,CAAEb,OAJX,CAKE,aAAa,CAAEU,mBALjB,EADF,CASD,CA3DD,CA6DA,cAAelB,CAAAA,kBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport YouTube from 'react-youtube';\n\nlet player;\n\nconst YoutubeVideoPlayer = ({\n  currentVideo, changeVideoState, paused, played, channel, syncVideo, timeStamp,\n}) => {\n  function onReady(event) {\n    player = event.target;\n    if (timeStamp && player.b) {\n      player.seekTo(timeStamp, true);\n    }\n    syncVideo(player.getCurrentTime(), channel);\n    if (paused) {\n      event.target.pauseVideo();\n    }\n    event.target.playVideo();\n  }\n\n  useEffect(() => {\n    if (paused && player && player.b) {\n      player.pauseVideo();\n    } else if (played && player && player.b) {\n      player.playVideo();\n    }\n  }, [paused, played]);\n\n  useEffect(() => {\n    if (timeStamp && player && player.b) {\n      if (Math.abs(player.getCurrentTime() - timeStamp) > 1) {\n        player.seekTo(timeStamp, true);\n      }\n    }\n  }, [timeStamp]);\n\n  function onPlayerStateChange(event) {\n    const state = event.data;\n    syncVideo(player.getCurrentTime(), channel);\n\n    if (state === 1) { // if the video is playing\n      changeVideoState(currentVideo, channel, false, true);\n    } else if (state === 2) { // if the video is paused\n      changeVideoState(currentVideo, channel, true, false);\n    }\n  }\n\n  const opts = {\n    height: '500',\n    width: '840',\n    playerVars: { // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  return (\n    <YouTube\n      id=\"youtube-player\"\n      videoId={currentVideo}\n      opts={opts}\n      onReady={onReady}\n      onStateChange={onPlayerStateChange}\n    />\n  );\n};\n\nexport default YoutubeVideoPlayer;\n"]},"metadata":{},"sourceType":"module"}