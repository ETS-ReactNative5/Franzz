{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Canvas/Canvas.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Canvas.css';\n\nconst Canvas = () => {\n  const canvasRef = useRef(null);\n  let context;\n  let drawing = false;\n  const points = {\n    color: 'black'\n  }; // Using the useEffect callback function to grab the canvas after render and setContext\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      context = canvasRef.current.getContext('2d');\n    }\n  }, []);\n\n  const drawLine = (x0, y0, x1, y1, color, emit) => {\n    console.log(x0, y0, x1, y1, color, context);\n    context.beginPath();\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.strokeStyle = color;\n    context.lineWidth = 2;\n    context.stroke();\n    context.closePath();\n  };\n\n  const mouseDown = e => {\n    drawing = true;\n    points.x = e.clientX;\n    points.y = e.clientY;\n  };\n\n  const mouseUp = e => {\n    // eslint-disable-next-line no-useless-return\n    if (!drawing) {\n      return;\n    }\n\n    drawing = false;\n    drawLine(points.x, points.y, e.clientX, e.clientY, points.color, true);\n  };\n\n  const mouseMove = e => {\n    // eslint-disable-next-line no-useless-return\n    if (!drawing) {\n      return;\n    }\n\n    drawLine(points.x, points.y, e.clientX, e.clientY, points.color, true);\n    points.x = e.clientX;\n    points.y = e.clientY;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    className: \"whiteboard\",\n    style: {\n      border: \"1px solid black\"\n    },\n    ref: canvasRef,\n    onMouseDown: mouseDown,\n    onMouseUp: mouseUp,\n    onMouseMove: mouseMove,\n    onMouseOut: mouseUp,\n    onFocus: () => {},\n    onBlur: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default Canvas;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Canvas/Canvas.js"],"names":["React","useState","useRef","useEffect","Canvas","canvasRef","context","drawing","points","color","current","getContext","drawLine","x0","y0","x1","y1","emit","console","log","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","mouseDown","e","x","clientX","y","clientY","mouseUp","mouseMove","border"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './Canvas.css';\n\nconst Canvas = () => {\n  const canvasRef = useRef(null);\n  let context;\n  let drawing = false;\n\n  const points = {\n    color: 'black',\n  };\n\n  // Using the useEffect callback function to grab the canvas after render and setContext\n  useEffect(() => {\n    if (canvasRef.current) {\n      context = canvasRef.current.getContext('2d');\n    }\n  }, []);\n\n  const drawLine = (x0, y0, x1, y1, color, emit) => {\n    console.log(x0, y0, x1, y1, color, context);\n    context.beginPath();\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.strokeStyle = color;\n    context.lineWidth = 2;\n    context.stroke();\n    context.closePath();\n  };\n\n  const mouseDown = (e) => {\n    drawing = true;\n    points.x = e.clientX;\n    points.y = e.clientY;\n  };\n\n  const mouseUp = (e) => {\n    // eslint-disable-next-line no-useless-return\n    if (!drawing) { return; }\n    drawing = false;\n    drawLine(points.x, points.y, e.clientX, e.clientY, points.color, true);\n  };\n\n  const mouseMove = (e) => {\n    // eslint-disable-next-line no-useless-return\n    if (!drawing) { return; }\n    drawLine(points.x, points.y, e.clientX, e.clientY, points.color, true);\n    points.x = e.clientX;\n    points.y = e.clientY;\n  };\n\n  return (\n    <div>\n      <canvas\n        className=\"whiteboard\"\n        style={{border: \"1px solid black\"}}\n        ref={canvasRef}\n        onMouseDown={mouseDown}\n        onMouseUp={mouseUp}\n        onMouseMove={mouseMove}\n        onMouseOut={mouseUp}\n        onFocus={() => {}}\n        onBlur={ () => {} }\n      />\n    </div>\n  );\n};\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}