{"ast":null,"code":"function preventDefaults(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nasync function uploadFile(file, channelId, albumName, emitSendMessage, viewUpdatedAlbum) {\n  const url = 'https://arcane-bastion-72484.herokuapp.com/api/photos/uploadPhotos';\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('channel', `${channelId}`);\n  let path = `albums/${albumName.replace(/ /g, '-')}`;\n\n  if (albumName === 'chat') {\n    path = 'chat';\n  }\n\n  formData.append('album', path);\n  fetch(url, {\n    method: 'POST',\n    body: formData\n  }) // send the url of image/video to socket to be used for messaging\n  .then(res => res.json()).then(data => {\n    if (albumName === 'chat') {\n      emitSendMessage(data.result.url, data.video, data.image);\n    } else {\n      setTimeout(() => {\n        viewUpdatedAlbum();\n      }, 3000);\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction handleFiles(files, channelId, albumName, emitSendMessage, viewUpdatedAlbum) {\n  [...files].forEach(file => {\n    uploadFile(file, channelId, albumName, emitSendMessage, viewUpdatedAlbum);\n  });\n}\n\nfunction handleDrop(e, channelId, albumName, emitSendMessage) {\n  // get emitsendmessage to be passed through as a function\n  preventDefaults(e);\n  const dt = e.dataTransfer;\n  const {\n    files\n  } = dt;\n  handleFiles(files, channelId, albumName, emitSendMessage);\n}\n\nmodule.exports = {\n  preventDefaults,\n  handleDrop,\n  handleFiles\n};","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Modules/Photos/Scripts/DragAndDropPhotos.js"],"names":["preventDefaults","e","preventDefault","stopPropagation","uploadFile","file","channelId","albumName","emitSendMessage","viewUpdatedAlbum","url","formData","FormData","append","path","replace","fetch","method","body","then","res","json","data","result","video","image","setTimeout","catch","err","console","log","handleFiles","files","forEach","handleDrop","dt","dataTransfer","module","exports"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BA,EAAAA,CAAC,CAACC,cAAF;AACAD,EAAAA,CAAC,CAACE,eAAF;AACD;;AAED,eAAeC,UAAf,CAA0BC,IAA1B,EAAgCC,SAAhC,EAA2CC,SAA3C,EAAsDC,eAAtD,EAAuEC,gBAAvE,EAAyF;AACvF,QAAMC,GAAG,GAAG,oEAAZ;AACA,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBR,IAAxB;AACAM,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA4B,GAAEP,SAAU,EAAxC;AACA,MAAIQ,IAAI,GAAI,UAASP,SAAS,CAACQ,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,CAA6B,EAAlD;;AACA,MAAIR,SAAS,KAAK,MAAlB,EAA0B;AACxBO,IAAAA,IAAI,GAAG,MAAP;AACD;;AACDH,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBC,IAAzB;AAGAE,EAAAA,KAAK,CAACN,GAAD,EAAM;AACTO,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,IAAI,EAAEP;AAFG,GAAN,CAAL,CAIE;AAJF,GAKGQ,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,EAMGF,IANH,CAMSG,IAAD,IAAU;AACd,QAAIf,SAAS,KAAK,MAAlB,EAA0B;AACxBC,MAAAA,eAAe,CAACc,IAAI,CAACC,MAAL,CAAYb,GAAb,EAAkBY,IAAI,CAACE,KAAvB,EAA8BF,IAAI,CAACG,KAAnC,CAAf;AACD,KAFD,MAEO;AACLC,MAAAA,UAAU,CAAC,MAAM;AACfjB,QAAAA,gBAAgB;AACjB,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAdH,EAeGkB,KAfH,CAeUC,GAAD,IAAS;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,GAfvC;AAgBD;;AAED,SAASG,WAAT,CAAqBC,KAArB,EAA4B1B,SAA5B,EAAuCC,SAAvC,EAAkDC,eAAlD,EAAmEC,gBAAnE,EAAqF;AACnF,GAAC,GAAGuB,KAAJ,EAAWC,OAAX,CAAoB5B,IAAD,IAAU;AAC3BD,IAAAA,UAAU,CAACC,IAAD,EAAOC,SAAP,EAAkBC,SAAlB,EAA6BC,eAA7B,EAA8CC,gBAA9C,CAAV;AACD,GAFD;AAGD;;AAED,SAASyB,UAAT,CAAoBjC,CAApB,EAAuBK,SAAvB,EAAkCC,SAAlC,EAA6CC,eAA7C,EAA8D;AAC5D;AACAR,EAAAA,eAAe,CAACC,CAAD,CAAf;AACA,QAAMkC,EAAE,GAAGlC,CAAC,CAACmC,YAAb;AACA,QAAM;AAAEJ,IAAAA;AAAF,MAAYG,EAAlB;AAEAJ,EAAAA,WAAW,CAACC,KAAD,EAAQ1B,SAAR,EAAmBC,SAAnB,EAA8BC,eAA9B,CAAX;AACD;;AAGD6B,MAAM,CAACC,OAAP,GAAiB;AACftC,EAAAA,eADe;AAEfkC,EAAAA,UAFe;AAGfH,EAAAA;AAHe,CAAjB","sourcesContent":["function preventDefaults(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nasync function uploadFile(file, channelId, albumName, emitSendMessage, viewUpdatedAlbum) {\n  const url = 'https://arcane-bastion-72484.herokuapp.com/api/photos/uploadPhotos';\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('channel', `${channelId}`);\n  let path = `albums/${albumName.replace(/ /g, '-')}`;\n  if (albumName === 'chat') {\n    path = 'chat';\n  }\n  formData.append('album', path);\n\n\n  fetch(url, {\n    method: 'POST',\n    body: formData,\n  })\n    // send the url of image/video to socket to be used for messaging\n    .then((res) => res.json())\n    .then((data) => {\n      if (albumName === 'chat') {\n        emitSendMessage(data.result.url, data.video, data.image);\n      } else {\n        setTimeout(() => {\n          viewUpdatedAlbum();\n        }, 3000);\n      }\n    })\n    .catch((err) => { console.log(err); });\n}\n\nfunction handleFiles(files, channelId, albumName, emitSendMessage, viewUpdatedAlbum) {\n  [...files].forEach((file) => {\n    uploadFile(file, channelId, albumName, emitSendMessage, viewUpdatedAlbum);\n  });\n}\n\nfunction handleDrop(e, channelId, albumName, emitSendMessage) {\n  // get emitsendmessage to be passed through as a function\n  preventDefaults(e);\n  const dt = e.dataTransfer;\n  const { files } = dt;\n\n  handleFiles(files, channelId, albumName, emitSendMessage);\n}\n\n\nmodule.exports = {\n  preventDefaults,\n  handleDrop,\n  handleFiles,\n};\n"]},"metadata":{},"sourceType":"module"}