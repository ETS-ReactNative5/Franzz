{"ast":null,"code":"import _slicedToArray from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{CopyToClipboard}from'react-copy-to-clipboard';import Modal from'react-bootstrap/Modal';import Button from'react-bootstrap/Button';import TextField from'@material-ui/core/TextField';import channelService from'../../../../service/channelService';var InviteLink=function InviteLink(_ref){var channel=_ref.channel;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState({ready:false,link:''}),_useState4=_slicedToArray(_useState3,2),invite=_useState4[0],setInvite=_useState4[1];var handleClose=function handleClose(){return setShow(false);};var createInvite=function createInvite(){channelService.getInvite(channel).then(function(_ref2){var channelID=_ref2.channelID;return setInvite({ready:true,link:channelID});}).then(function(){setShow(true);});};return React.createElement(React.Fragment,null,React.createElement(Button,{className:\"inviteLinkModalButton\",variant:\"primary\",onClick:createInvite},\"Create Invite Link\"),React.createElement(Modal,{className:\"inviteLinkModalContainer\",show:show,onHide:handleClose},React.createElement(Modal.Header,{closeButton:true},React.createElement(Modal.Title,null,\"Invite Link\")),React.createElement(Modal.Body,null,React.createElement(\"div\",{className:\"invitePopup\"},React.createElement(TextField,{defaultValue:invite.link}),React.createElement(CopyToClipboard,{text:invite.link},React.createElement(Button,{type:\"button\"},\"Copy to clipboard!\")))),React.createElement(Modal.Footer,null,React.createElement(Button,{variant:\"secondary\",onClick:handleClose},\"Close\"))));};export default InviteLink;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/ChannelUI/InviteLink.js"],"names":["React","useState","CopyToClipboard","Modal","Button","TextField","channelService","InviteLink","channel","show","setShow","ready","link","invite","setInvite","handleClose","createInvite","getInvite","then","channelID"],"mappings":"wHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,eACVP,QAAQ,CAAC,KAAD,CADE,wCAC3BQ,IAD2B,eACrBC,OADqB,8BAENT,QAAQ,CAAC,CACnCU,KAAK,CAAE,KAD4B,CAEnCC,IAAI,CAAE,EAF6B,CAAD,CAFF,yCAE3BC,MAF2B,eAEnBC,SAFmB,eAOlC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAML,CAAAA,OAAO,CAAC,KAAD,CAAb,EAApB,CAEA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBV,cAAc,CACXW,SADH,CACaT,OADb,EAEGU,IAFH,CAEQ,mBAAGC,CAAAA,SAAH,OAAGA,SAAH,OAAmBL,CAAAA,SAAS,CAAC,CACjCH,KAAK,CAAE,IAD0B,CAEjCC,IAAI,CAAEO,SAF2B,CAAD,CAA5B,EAFR,EAMGD,IANH,CAMQ,UAAM,CAAER,OAAO,CAAC,IAAD,CAAP,CAAgB,CANhC,EAOD,CARD,CAUA,MACE,yCACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,uBAAlB,CAA0C,OAAO,CAAC,SAAlD,CAA4D,OAAO,CAAEM,YAArE,uBADF,CAKE,oBAAC,KAAD,EAAO,SAAS,CAAC,0BAAjB,CAA4C,IAAI,CAAEP,IAAlD,CAAwD,MAAM,CAAEM,WAAhE,EACE,oBAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,EACE,oBAAC,KAAD,CAAO,KAAP,oBADF,CADF,CAIE,oBAAC,KAAD,CAAO,IAAP,MACE,2BAAK,SAAS,CAAC,aAAf,EACE,oBAAC,SAAD,EAAW,YAAY,CAAEF,MAAM,CAACD,IAAhC,EADF,CAEE,oBAAC,eAAD,EACE,IAAI,CAAEC,MAAM,CAACD,IADf,EAGE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,uBAHF,CAFF,CADF,CAJF,CAgBE,oBAAC,KAAD,CAAO,MAAP,MACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAEG,WAArC,UADF,CAhBF,CALF,CADF,CA8BD,CAjDD,CAmDA,cAAeR,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport TextField from '@material-ui/core/TextField';\nimport channelService from '../../../../service/channelService';\n\n\nconst InviteLink = ({ channel }) => {\n  const [show, setShow] = useState(false);\n  const [invite, setInvite] = useState({\n    ready: false,\n    link: '',\n  });\n\n  const handleClose = () => setShow(false);\n\n  const createInvite = () => {\n    channelService\n      .getInvite(channel)\n      .then(({ channelID }) => setInvite({\n        ready: true,\n        link: channelID,\n      }))\n      .then(() => { setShow(true); });\n  };\n\n  return (\n    <>\n      <Button className=\"inviteLinkModalButton\" variant=\"primary\" onClick={createInvite}>\n        Create Invite Link\n      </Button>\n\n      <Modal className=\"inviteLinkModalContainer\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Invite Link</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"invitePopup\">\n            <TextField defaultValue={invite.link} />\n            <CopyToClipboard\n              text={invite.link}\n            >\n              <Button type=\"button\">\n                Copy to clipboard!\n              </Button>\n            </CopyToClipboard>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default InviteLink;\n"]},"metadata":{},"sourceType":"module"}