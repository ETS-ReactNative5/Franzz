{"ast":null,"code":"import _slicedToArray from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react/prop-types */ /* eslint-disable jsx-a11y/media-has-caption */import React,{useState}from'react';import ReactEmoji from'react-emoji';import{Image,CloudinaryContext}from'cloudinary-react';import FsLightbox from'fslightbox-react';var Message=function Message(_ref){var username=_ref.username,message=_ref.message,video=_ref.video,image=_ref.image,isCurrent=_ref.isCurrent;// implement delete, edit, emoji\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggler=_useState2[0],changeToggle=_useState2[1];return React.createElement(\"div\",null,React.createElement(FsLightbox,{toggler:toggler,sources:[message]}),React.createElement(\"article\",{className:isCurrent?'full-message-me':'full-message'},React.createElement(\"div\",{className:\"chat-name\"},React.createElement(\"span\",null,username.length<25?username:username.slice(0,25)+\"...\")),React.createElement(\"div\",{className:isCurrent?'message-content-me':'message-content'},image&&React.createElement(CloudinaryContext,{cloudName:\"jekmessaging\"},React.createElement(Image,{className:\"message-media\",publicId:message,width:\"100%\",onClick:function onClick(){return changeToggle(!toggler);}})),video&&React.createElement(CloudinaryContext,{cloudName:\"jekmessaging\"},React.createElement(\"video\",{className:\"message-media\",width:\"100%\",onClick:function onClick(){return changeToggle(!toggler);},controls:true},React.createElement(\"source\",{src:message,type:\"video/webm\"}),React.createElement(\"source\",{src:message,type:\"video/mp4\"}),React.createElement(\"source\",{src:message,type:\"video/ogg\"}))),!image&&!video&&ReactEmoji.emojify(message))));};export default Message;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Container/Chat/Message.js"],"names":["React","useState","ReactEmoji","Image","CloudinaryContext","FsLightbox","Message","username","message","video","image","isCurrent","toggler","changeToggle","length","slice","emojify"],"mappings":"wHAAA,qC,CACA,+CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,OACEC,KADF,CACSC,iBADT,KAEO,kBAFP,CAGA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAEV,IADJC,CAAAA,QACI,MADJA,QACI,CADMC,OACN,MADMA,OACN,CADeC,KACf,MADeA,KACf,CADsBC,KACtB,MADsBA,KACtB,CAD6BC,SAC7B,MAD6BA,SAC7B,CACJ;AADI,cAE4BV,QAAQ,CAAC,KAAD,CAFpC,wCAEGW,OAFH,eAEYC,YAFZ,eAGJ,MACE,gCACE,oBAAC,UAAD,EACE,OAAO,CAAED,OADX,CAEE,OAAO,CAAE,CAACJ,OAAD,CAFX,EADF,CAKE,+BAAS,SAAS,CAAEG,SAAS,CAAG,iBAAH,CAAuB,cAApD,EACE,2BAAK,SAAS,CAAC,WAAf,EACE,gCAAOJ,QAAQ,CAACO,MAAT,CAAkB,EAAlB,CAAuBP,QAAvB,CAAkCA,QAAQ,CAACQ,KAAT,CAAe,CAAf,CAAiB,EAAjB,EAAuB,KAAhE,CADF,CADF,CAKE,2BAAK,SAAS,CAAEJ,SAAS,CAAG,oBAAH,CAA0B,iBAAnD,EACGD,KAAK,EACN,oBAAC,iBAAD,EAAmB,SAAS,CAAC,cAA7B,EACE,oBAAC,KAAD,EAAO,SAAS,CAAC,eAAjB,CAAiC,QAAQ,CAAEF,OAA3C,CAAoD,KAAK,CAAC,MAA1D,CAAiE,OAAO,CAAE,yBAAMK,CAAAA,YAAY,CAAC,CAACD,OAAF,CAAlB,EAA1E,EADF,CAFF,CAMIH,KAAK,EACP,oBAAC,iBAAD,EAAmB,SAAS,CAAC,cAA7B,EACE,6BAAO,SAAS,CAAC,eAAjB,CAAiC,KAAK,CAAC,MAAvC,CAA8C,OAAO,CAAE,yBAAMI,CAAAA,YAAY,CAAC,CAACD,OAAF,CAAlB,EAAvD,CAAqF,QAAQ,KAA7F,EACE,8BAAQ,GAAG,CAAEJ,OAAb,CAAsB,IAAI,CAAC,YAA3B,EADF,CAEE,8BAAQ,GAAG,CAAEA,OAAb,CAAsB,IAAI,CAAC,WAA3B,EAFF,CAGE,8BAAQ,GAAG,CAAEA,OAAb,CAAsB,IAAI,CAAC,WAA3B,EAHF,CADF,CAPF,CAeG,CAACE,KAAD,EAAU,CAACD,KAAX,EAAoBP,UAAU,CAACc,OAAX,CAAmBR,OAAnB,CAfvB,CALF,CALF,CADF,CAoCD,CAzCD,CA2CA,cAAeF,CAAAA,OAAf","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useState } from 'react';\nimport ReactEmoji from 'react-emoji';\nimport {\n  Image, CloudinaryContext,\n} from 'cloudinary-react';\nimport FsLightbox from 'fslightbox-react';\n\nconst Message = ({\n  username, message, video, image, isCurrent,\n}) => {\n  // implement delete, edit, emoji\n  const [toggler, changeToggle] = useState(false);\n  return (\n    <div>\n      <FsLightbox\n        toggler={toggler}\n        sources={[message]}\n      />\n      <article className={isCurrent ? 'full-message-me' : 'full-message'}>\n        <div className=\"chat-name\">\n          <span>{username.length < 25 ? username : username.slice(0,25) + \"...\"}</span>\n          {/* {created} */}\n        </div>\n        <div className={isCurrent ? 'message-content-me' : 'message-content'}>\n          {image && (\n          <CloudinaryContext cloudName=\"jekmessaging\">\n            <Image className=\"message-media\" publicId={message} width=\"100%\" onClick={() => changeToggle(!toggler)} />\n          </CloudinaryContext>\n          )}\n          { video && (\n          <CloudinaryContext cloudName=\"jekmessaging\">\n            <video className=\"message-media\" width=\"100%\" onClick={() => changeToggle(!toggler)} controls>\n              <source src={message} type=\"video/webm\" />\n              <source src={message} type=\"video/mp4\" />\n              <source src={message} type=\"video/ogg\" />\n            </video>\n          </CloudinaryContext>\n          )}\n          {!image && !video && ReactEmoji.emojify(message)}\n          {/* <button type=\"button\"> delete </button>\n        <button type=\"button\"> edit </button>\n        <button type=\"button\"> emoji </button> */}\n        </div>\n      </article>\n\n    </div>\n\n  );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}