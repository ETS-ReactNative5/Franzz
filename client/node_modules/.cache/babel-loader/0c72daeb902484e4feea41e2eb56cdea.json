{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Home/Home.js\";\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { serverURL } from '../../utils/config';\nimport channelService from '../../service/channelService';\nimport mapService from '../../service/mapService';\nimport NewChannelModal from './ChannelList/NewChannelModal';\nimport ChannelList from './ChannelList/ChannelList';\nimport Channel from './Channel/Channel';\nimport PopupToast from './PopUpToast';\nimport { useYoutube } from '../../hooks/useYoutube';\nimport { useChat } from '../../hooks/useChat';\nimport './homeStyling.css';\nimport '../../styles.css';\nlet socket;\n\nconst Home = ({\n  state,\n  setState\n}) => {\n  let {\n    id\n  } = useParams();\n  console.log('channel', id);\n  const {\n    emitSendMessage,\n    emitJoinChannel,\n    emitCreateChannel\n  } = useChat(state, setState, socket);\n  const {\n    changeVideoState,\n    syncVideo\n  } = useYoutube(state, setState, socket);\n\n  const sendLine = line => {\n    const lineObj = {\n      line,\n      channel: state.currentChannel,\n      user: state.currentUser\n    };\n    setState(prev => ({ ...prev,\n      lines: { ...prev.lines,\n        [state.currentChannel]: { ...prev.lines[state.currentChannel],\n          [state.currentUser]: {\n            user: state.currentUser,\n            line\n          }\n        }\n      }\n    }));\n    socket.emit('draw', lineObj);\n  };\n\n  const updateLocation = location => {\n    const locationObj = {\n      location,\n      authorization: state.authorization\n    };\n    socket.emit('update location', locationObj, locations => {\n      setState(prev => ({ ...prev,\n        locations,\n        center: location\n      }));\n    });\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(() => {\n        mapService.getLocation(updateLocation);\n      });\n    }\n  };\n\n  const channels = Object.keys(state.channelStates);\n  const channelIdNamePair = channels.map(id => ({\n    id,\n    name: state.channelStates[id].name\n  }));\n\n  const selectCurrentChannel = channel => {\n    setState(prev => ({ ...prev,\n      currentChannel: channel\n    }));\n  };\n\n  const toggleForm = s => {\n    setState(prev => ({ ...prev,\n      newChannelForm: s\n    }));\n  };\n\n  const channelItems = channels.map(id => {\n    const {\n      name,\n      messages,\n      users\n    } = state.channelStates[id];\n    return React.createElement(Route, {\n      path: `/channel/${id}`,\n      key: `${id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Channel, {\n      channel: id,\n      name: name,\n      messages: messages,\n      userStatus: state.users[id],\n      userList: users,\n      emitSendMessage: emitSendMessage,\n      locations: state.locations[id],\n      center: state.center,\n      currentUser: state.currentUser,\n      videoStates: state.videoStates,\n      changeVideoState: changeVideoState,\n      syncVideo: syncVideo,\n      sendLine: sendLine,\n      lines: state.lines[id],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }); // handle initial state\n\n  useEffect(() => {\n    // grab all channel data, messages\n    if (state.authorization) {\n      channelService.getUserData().then(({\n        channelData\n      }) => {\n        const channelStates = channelData.reduce((obj, ele) => {\n          if (!obj[ele.data.channel]) {\n            // eslint-disable-next-line no-param-reassign\n            obj[ele.data.channel] = {\n              users: ele.data.users,\n              name: ele.data.name,\n              channel: ele.data.channel,\n              messages: ele.messages\n            };\n          }\n\n          return obj;\n        }, {});\n        const videoStates = channelData.reduce((obj, ele) => {\n          // eslint-disable-next-line no-param-reassign\n          obj[ele.data.channel] = {\n            url: '5mGuCdlCcNM',\n            played: false,\n            paused: true\n          };\n          return obj;\n        }, {});\n        setState(prev => ({ ...prev,\n          channelStates,\n          videoStates // currentChannel: Object.keys(channelStates)[0],\n\n        }));\n      });\n    }\n\n    socket = io(`${serverURL}/`);\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', data => {\n        console.log(data);\n      });\n      socket.emit('join channels', {\n        authorization: state.authorization\n      }, data => {\n        console.log(data);\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (!state.currentChannelLoaded) {\n      setState(prev => ({ ...prev,\n        currentChannelLoaded: true\n      }));\n    } else {\n      setState(prev => ({ ...prev,\n        loaded: true\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [state.currentChannel]);\n  useEffect(() => {\n    mapService.getLocation(updateLocation);\n    getLocation();\n    socket.on('new message', data => {\n      const {\n        channelID,\n        newMessageObj\n      } = data;\n\n      if (channelID && newMessageObj) {\n        setState(prev => ({ ...prev,\n          channelStates: { ...prev.channelStates,\n            [channelID]: { ...prev.channelStates[channelID],\n              messages: prev.channelStates[channelID].messages.concat(newMessageObj)\n            }\n          }\n        }));\n      }\n    });\n    socket.on('user status', ({\n      userStatus\n    }) => {\n      const {\n        channel,\n        users\n      } = userStatus;\n      console.log(users, channel);\n      setState(prev => ({ ...prev,\n        users: { ...prev.users,\n          [channel]: users\n        }\n      }));\n    });\n    socket.on('update location', updatedLocations => {\n      if (updatedLocations) {\n        setState(prev => ({ ...prev,\n          locations: { ...prev.locations,\n            ...updatedLocations\n          }\n        }));\n      }\n    });\n    socket.on('new video state', ({\n      url,\n      paused,\n      played,\n      channel\n    }) => {\n      if (url) {\n        setState(prev => ({ ...prev,\n          videoStates: { ...prev.videoStates,\n            [channel]: {\n              url,\n              paused,\n              played\n            }\n          }\n        }));\n      }\n    });\n    socket.on('new time stamp', ({\n      time,\n      channel\n    }) => {\n      setState(prev => ({ ...prev,\n        videoStates: { ...prev.videoStates,\n          [channel]: { ...prev.videoStates[channel],\n            timeStamp: time\n          }\n        }\n      }));\n    });\n    socket.on('draw', ({\n      user,\n      channel,\n      line\n    }) => {\n      setState(prev => ({ ...prev,\n        lines: { ...prev.lines,\n          [channel]: { ...prev.lines[channel],\n            [user]: {\n              user,\n              line\n            }\n          }\n        }\n      }));\n    });\n    return () => {\n      socket.off();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    id: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(ChannelList, {\n    selectCurrentChannel: selectCurrentChannel,\n    channelIdNamePair: channelIdNamePair,\n    emitJoinChannel: emitJoinChannel,\n    emitCreateChannel: emitCreateChannel,\n    toggleForm: toggleForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, channelItems), state.loaded && !state.currentChannel && React.createElement(NewChannelModal, {\n    emitCreateChannel: emitCreateChannel,\n    emitJoinChannel: emitJoinChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }), React.createElement(PopupToast, {\n    show: state.newChannelForm,\n    toggleForm: toggleForm,\n    emitCreateChannel: emitCreateChannel,\n    emitJoinChannel: emitJoinChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    exact: true,\n    from: \"/home\",\n    to: state.currentChannel ? `/channel/${state.currentChannel}` : '/home',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Home.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","Redirect","useParams","io","serverURL","channelService","mapService","NewChannelModal","ChannelList","Channel","PopupToast","useYoutube","useChat","socket","Home","state","setState","id","console","log","emitSendMessage","emitJoinChannel","emitCreateChannel","changeVideoState","syncVideo","sendLine","line","lineObj","channel","currentChannel","user","currentUser","prev","lines","emit","updateLocation","location","locationObj","authorization","locations","center","getLocation","navigator","geolocation","watchPosition","channels","Object","keys","channelStates","channelIdNamePair","map","name","selectCurrentChannel","toggleForm","s","newChannelForm","channelItems","messages","users","videoStates","getUserData","then","channelData","reduce","obj","ele","data","url","played","paused","on","currentChannelLoaded","loaded","channelID","newMessageObj","concat","userStatus","updatedLocations","time","timeStamp","off"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useParams,\n} from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { serverURL } from '../../utils/config';\n\nimport channelService from '../../service/channelService';\nimport mapService from '../../service/mapService';\n\nimport NewChannelModal from './ChannelList/NewChannelModal';\nimport ChannelList from './ChannelList/ChannelList';\nimport Channel from './Channel/Channel';\n\nimport PopupToast from './PopUpToast';\n\nimport { useYoutube } from '../../hooks/useYoutube';\nimport { useChat } from '../../hooks/useChat';\n\nimport './homeStyling.css';\nimport '../../styles.css';\n\nlet socket;\n\nconst Home = ({ state, setState }) => {\n  let { id } = useParams();\n  console.log('channel', id)\n  const {\n    emitSendMessage,\n    emitJoinChannel,\n    emitCreateChannel,\n  } = useChat(state, setState, socket);\n\n  const {\n    changeVideoState,\n    syncVideo,\n  } = useYoutube(state, setState, socket);\n\n  const sendLine = (line) => {\n    const lineObj = {\n      line,\n      channel: state.currentChannel,\n      user: state.currentUser,\n    };\n    setState((prev) => ({\n      ...prev,\n      lines: {\n        ...prev.lines,\n        [state.currentChannel]: {\n          ...prev.lines[state.currentChannel],\n          [state.currentUser]: {\n            user: state.currentUser,\n            line,\n          },\n        },\n      },\n    }));\n    socket.emit('draw', lineObj);\n  };\n\n  const updateLocation = (location) => {\n    const locationObj = {\n      location,\n      authorization: state.authorization,\n    };\n    socket.emit('update location', locationObj, (locations) => {\n      setState((prev) => ({\n        ...prev,\n        locations,\n        center: location,\n      }));\n    });\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(() => {\n        mapService.getLocation(updateLocation);\n      });\n    }\n  };\n\n  const channels = Object.keys(state.channelStates);\n  const channelIdNamePair = channels.map((id) => ({ id, name: state.channelStates[id].name }));\n\n  const selectCurrentChannel = (channel) => {\n    setState((prev) => ({ ...prev, currentChannel: channel }));\n  };\n\n  const toggleForm = (s) => {\n    setState((prev) => ({ ...prev, newChannelForm: s }));\n  };\n\n  const channelItems = channels.map((id) => {\n    const { name, messages, users } = state.channelStates[id];\n    return (\n      <Route\n        path={`/channel/${id}`}\n        key={`${id}`}\n      >\n        <Channel\n          channel={id}\n          name={name}\n          messages={messages}\n          userStatus={state.users[id]}\n          userList={users}\n          emitSendMessage={emitSendMessage}\n          locations={state.locations[id]}\n          center={state.center}\n          currentUser={state.currentUser}\n          videoStates={state.videoStates}\n          changeVideoState={changeVideoState}\n          syncVideo={syncVideo}\n          sendLine={sendLine}\n          lines={state.lines[id]}\n        />\n      </Route>\n    );\n  });\n\n  // handle initial state\n  useEffect(() => {\n    // grab all channel data, messages\n    if (state.authorization) {\n      channelService\n        .getUserData()\n        .then(({ channelData }) => {\n          const channelStates = channelData.reduce((obj, ele) => {\n            if (!obj[ele.data.channel]) {\n              // eslint-disable-next-line no-param-reassign\n              obj[ele.data.channel] = {\n                users: ele.data.users,\n                name: ele.data.name,\n                channel: ele.data.channel,\n                messages: ele.messages,\n              };\n            }\n            return obj;\n          }, {});\n          const videoStates = channelData.reduce((obj, ele) => {\n            // eslint-disable-next-line no-param-reassign\n            obj[ele.data.channel] = {\n              url: '5mGuCdlCcNM',\n              played: false,\n              paused: true,\n            };\n            return obj;\n          }, {});\n          setState((prev) => ({\n            ...prev,\n            channelStates,\n            videoStates,\n            // currentChannel: Object.keys(channelStates)[0],\n          }));\n        });\n    }\n    socket = io(`${serverURL}/`);\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', (data) => {\n        console.log(data);\n      });\n      socket.emit('join channels', { authorization: state.authorization }, (data) => {\n        console.log(data);\n      });\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!state.currentChannelLoaded) {\n      setState((prev) => ({ ...prev, currentChannelLoaded: true }));\n    } else {\n      setState((prev) => ({ ...prev, loaded: true }));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.currentChannel]);\n\n  useEffect(() => {\n    mapService.getLocation(updateLocation);\n    getLocation();\n\n    socket.on('new message', (data) => {\n      const { channelID, newMessageObj } = data;\n      if (channelID && newMessageObj) {\n        setState((prev) => (\n          {\n            ...prev,\n            channelStates: {\n              ...prev.channelStates,\n              [channelID]: {\n                ...prev.channelStates[channelID],\n                messages: prev.channelStates[channelID].messages.concat(newMessageObj),\n              },\n            },\n          }));\n      }\n    });\n\n    socket.on('user status', ({ userStatus }) => {\n      const { channel, users } = userStatus;\n      console.log(users, channel)\n      setState((prev) => ({\n        ...prev,\n        users: {\n          ...prev.users,\n          [channel]: users,\n        },\n      }));\n    });\n\n    socket.on('update location', (updatedLocations) => {\n      if (updatedLocations) {\n        setState((prev) => ({\n          ...prev,\n          locations: {\n            ...prev.locations,\n            ...updatedLocations,\n          },\n        }));\n      }\n    });\n\n    socket.on('new video state', ({\n      url, paused, played, channel,\n    }) => {\n      if (url) {\n        setState((prev) => (\n          {\n            ...prev,\n            videoStates: {\n              ...prev.videoStates,\n              [channel]: {\n                url,\n                paused,\n                played,\n              },\n            },\n          }\n        ));\n      }\n    });\n\n    socket.on('new time stamp', ({\n      time, channel,\n    }) => {\n      setState((prev) => (\n        {\n          ...prev,\n          videoStates: {\n            ...prev.videoStates,\n            [channel]: { ...prev.videoStates[channel], timeStamp: time },\n          },\n        }\n      ));\n    });\n\n    socket.on('draw', ({ user, channel, line }) => {\n      setState((prev) => ({\n        ...prev,\n        lines: {\n          ...prev.lines,\n          [channel]: {\n            ...prev.lines[channel],\n            [user]: {\n              user,\n              line,\n            },\n          },\n        },\n      }));\n    });\n\n    return () => {\n      socket.off();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div id=\"main-container\">\n      <Router>\n        <ChannelList\n          selectCurrentChannel={selectCurrentChannel}\n          channelIdNamePair={channelIdNamePair}\n          emitJoinChannel={emitJoinChannel}\n          emitCreateChannel={emitCreateChannel}\n          toggleForm={toggleForm}\n        />\n        <Switch>\n          {channelItems}\n        </Switch>\n        {state.loaded && !state.currentChannel && (\n        <NewChannelModal\n          emitCreateChannel={emitCreateChannel}\n          emitJoinChannel={emitJoinChannel}\n        />\n        )}\n        <PopupToast\n          show={state.newChannelForm}\n          toggleForm={toggleForm}\n          emitCreateChannel={emitCreateChannel}\n          emitJoinChannel={emitJoinChannel}\n        />\n        <Redirect exact from=\"/home\" to={state.currentChannel ? `/channel/${state.currentChannel}` : '/home'} />\n      </Router>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}