{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Modules/Photos/AlbumForm.js\";\nimport React, { useState } from 'react';\nimport { LinearProgress } from '@material-ui/core'; // import { handleFiles } from './Scripts/DragAndDropPhotos';\n\nimport { serverURL } from '../../../../../utils/config';\nexport default function AlbumForm({\n  channelId,\n  emitSendMessage,\n  albumName,\n  newAlbum,\n  viewAlbum\n}) {\n  const [fields, changeFields] = useState({\n    album: albumName,\n    files: [],\n    originalName: albumName\n  });\n  const [showProgress, toggleProgress] = useState(false);\n\n  const uploadFile = async (file, channelId, albumName, emitSendMessage, viewUpdatedAlbum) => {\n    const url = `${serverURL}/api/photos/uploadPhotos`;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('channel', `${channelId}`);\n    let path = `albums/${albumName.replace(/ /g, '-')}`;\n\n    if (albumName === 'chat') {\n      path = 'chat';\n    }\n\n    formData.append('album', path);\n    fetch(url, {\n      method: 'POST',\n      body: formData\n    }) // send the url of image/video to socket to be used for messaging\n    .then(res => res.json()).then(data => {\n      if (albumName === 'chat') {\n        emitSendMessage(data.result.url, data.video, data.image);\n      } else {\n        setTimeout(() => {\n          viewUpdatedAlbum();\n        }, 3000);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleFiles = (files, channelId, albumName, emitSendMessage, viewUpdatedAlbum) => {\n    [...files].forEach(file => {\n      uploadFile(file, channelId, albumName, emitSendMessage, viewUpdatedAlbum);\n    });\n  };\n\n  function previewFile(file) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = function () {\n      let img = document.createElement('img');\n\n      if (file.type === 'video/mp4') {\n        img = document.createElement('video');\n      }\n\n      img.src = reader.result;\n      document.getElementById('input-display').appendChild(img);\n    };\n  } // Handles form events when adding files and\n  // creating a name\n\n\n  function handleOnChange(event) {\n    event.preventDefault();\n\n    if (event.target.name === 'album') {\n      const value = event.target.value.replace(/ /g, '-');\n      changeFields({ ...fields,\n        [event.target.name]: value,\n        originalName: event.target.value\n      });\n    } else {\n      [...event.target.files].forEach(previewFile);\n      changeFields({\n        album: fields.album,\n        files: [...fields.files, event.target.files]\n      });\n    }\n  }\n\n  function viewUpdatedAlbum() {\n    const pathName = albumName.replace(/ /g, '-');\n    console.log(pathName);\n    viewAlbum(`${channelId}/albums/${pathName}`, albumName);\n  }\n\n  function viewAlbums() {\n    viewAlbum('albums');\n  }\n\n  async function handleSubmit(event) {\n    toggleProgress(true);\n    event.preventDefault();\n    [...fields.files].forEach(file => {\n      if (!newAlbum) {\n        handleFiles(file, channelId, fields.album, emitSendMessage, viewUpdatedAlbum);\n      } else {\n        handleFiles(file, channelId, fields.album, emitSendMessage, viewAlbums);\n      }\n\n      setTimeout(() => {\n        toggleProgress(false);\n      }, 3000);\n    });\n    document.getElementById('album-upload-form').reset();\n    let message = `ðŸš¨A new album '${fields.album.replace(/-/g, ' ')}' has been uploadedðŸš¨`;\n\n    if (!newAlbum) {\n      message = `ðŸ‘€ New photos were added to ${fields.album}`;\n    } else {\n      setTimeout(() => viewAlbum('albums'), 3000);\n    }\n\n    setTimeout(() => emitSendMessage(message, false, false), 3000);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, showProgress && React.createElement(LinearProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), newAlbum && React.createElement(\"div\", {\n    className: \"popup-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"New Album\"), !newAlbum && React.createElement(\"div\", {\n    className: \"popup-title-mod\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Adding photos to\", ' ', albumName), React.createElement(\"form\", {\n    id: \"album-upload-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, newAlbum && React.createElement(\"input\", {\n    id: \"input-album\",\n    type: \"text\",\n    name: \"album\",\n    placeholder: \"Choose an album name\",\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"album-submission\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"submit-button\",\n    type: \"submit\",\n    value: \"SUBMIT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"input-display\",\n    value: \"drag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"album-upload\",\n    name: \"files\",\n    type: \"file\",\n    multiple: true,\n    accept: \"image/*\",\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"ADDED MEDIA:\"))));\n}","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Modules/Photos/AlbumForm.js"],"names":["React","useState","LinearProgress","serverURL","AlbumForm","channelId","emitSendMessage","albumName","newAlbum","viewAlbum","fields","changeFields","album","files","originalName","showProgress","toggleProgress","uploadFile","file","viewUpdatedAlbum","url","formData","FormData","append","path","replace","fetch","method","body","then","res","json","data","result","video","image","setTimeout","catch","err","console","log","handleFiles","forEach","previewFile","reader","FileReader","readAsDataURL","onloadend","img","document","createElement","type","src","getElementById","appendChild","handleOnChange","event","preventDefault","target","name","value","pathName","viewAlbums","handleSubmit","reset","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,mBAA/B,C,CACA;;AAEA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,eAAe,SAASC,SAAT,CAAmB;AAChCC,EAAAA,SADgC;AACrBC,EAAAA,eADqB;AACJC,EAAAA,SADI;AACOC,EAAAA,QADP;AACiBC,EAAAA;AADjB,CAAnB,EAEZ;AACD,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBV,QAAQ,CACrC;AACEW,IAAAA,KAAK,EAAEL,SADT;AAEEM,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,YAAY,EAAEP;AAHhB,GADqC,CAAvC;AAOA,QAAM,CAACQ,YAAD,EAAeC,cAAf,IAAiCf,QAAQ,CAAC,KAAD,CAA/C;;AAEA,QAAMgB,UAAU,GAAG,OAAOC,IAAP,EAAab,SAAb,EAAwBE,SAAxB,EAAmCD,eAAnC,EAAoDa,gBAApD,KAAyE;AAC1F,UAAMC,GAAG,GAAI,GAAEjB,SAAU,0BAAzB;AACA,UAAMkB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AACAG,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA4B,GAAElB,SAAU,EAAxC;AACA,QAAImB,IAAI,GAAI,UAASjB,SAAS,CAACkB,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,CAA6B,EAAlD;;AACA,QAAIlB,SAAS,KAAK,MAAlB,EAA0B;AACxBiB,MAAAA,IAAI,GAAG,MAAP;AACD;;AACDH,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBC,IAAzB;AAGAE,IAAAA,KAAK,CAACN,GAAD,EAAM;AACTO,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,IAAI,EAAEP;AAFG,KAAN,CAAL,CAIE;AAJF,KAKGQ,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,EAMGF,IANH,CAMSG,IAAD,IAAU;AACd,UAAIzB,SAAS,KAAK,MAAlB,EAA0B;AACxBD,QAAAA,eAAe,CAAC0B,IAAI,CAACC,MAAL,CAAYb,GAAb,EAAkBY,IAAI,CAACE,KAAvB,EAA8BF,IAAI,CAACG,KAAnC,CAAf;AACD,OAFD,MAEO;AACLC,QAAAA,UAAU,CAAC,MAAM;AACfjB,UAAAA,gBAAgB;AACjB,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KAdH,EAeGkB,KAfH,CAeUC,GAAD,IAAS;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,KAfvC;AAgBD,GA5BD;;AA8BA,QAAMG,WAAW,GAAG,CAAC5B,KAAD,EAAQR,SAAR,EAAmBE,SAAnB,EAA8BD,eAA9B,EAA+Ca,gBAA/C,KAAoE;AACtF,KAAC,GAAGN,KAAJ,EAAW6B,OAAX,CAAoBxB,IAAD,IAAU;AAC3BD,MAAAA,UAAU,CAACC,IAAD,EAAOb,SAAP,EAAkBE,SAAlB,EAA6BD,eAA7B,EAA8Ca,gBAA9C,CAAV;AACD,KAFD;AAGD,GAJD;;AAOA,WAASwB,WAAT,CAAqBzB,IAArB,EAA2B;AACzB,UAAM0B,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqB5B,IAArB;;AACA0B,IAAAA,MAAM,CAACG,SAAP,GAAmB,YAAY;AAC7B,UAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;;AACA,UAAIhC,IAAI,CAACiC,IAAL,KAAc,WAAlB,EAA+B;AAC7BH,QAAAA,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAN;AACD;;AACDF,MAAAA,GAAG,CAACI,GAAJ,GAAUR,MAAM,CAACX,MAAjB;AACAgB,MAAAA,QAAQ,CAACI,cAAT,CAAwB,eAAxB,EAAyCC,WAAzC,CAAqDN,GAArD;AACD,KAPD;AAQD,GA1DA,CA4DD;AACA;;;AACA,WAASO,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAID,KAAK,CAACE,MAAN,CAAaC,IAAb,KAAsB,OAA1B,EAAmC;AACjC,YAAMC,KAAK,GAAGJ,KAAK,CAACE,MAAN,CAAaE,KAAb,CAAmBnC,OAAnB,CAA2B,IAA3B,EAAiC,GAAjC,CAAd;AACAd,MAAAA,YAAY,CAAC,EACX,GAAGD,MADQ;AAEX,SAAC8C,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBC,KAFV;AAGX9C,QAAAA,YAAY,EAAE0C,KAAK,CAACE,MAAN,CAAaE;AAHhB,OAAD,CAAZ;AAKD,KAPD,MAOO;AACL,OAAC,GAAGJ,KAAK,CAACE,MAAN,CAAa7C,KAAjB,EAAwB6B,OAAxB,CAAgCC,WAAhC;AACAhC,MAAAA,YAAY,CAAC;AACXC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KADH;AAEXC,QAAAA,KAAK,EAAE,CAAC,GAAGH,MAAM,CAACG,KAAX,EAAkB2C,KAAK,CAACE,MAAN,CAAa7C,KAA/B;AAFI,OAAD,CAAZ;AAID;AACF;;AAED,WAASM,gBAAT,GAA4B;AAC1B,UAAM0C,QAAQ,GAAGtD,SAAS,CAACkB,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,CAAjB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AACApD,IAAAA,SAAS,CAAE,GAAEJ,SAAU,WAAUwD,QAAS,EAAjC,EAAoCtD,SAApC,CAAT;AACD;;AAED,WAASuD,UAAT,GAAsB;AACpBrD,IAAAA,SAAS,CAAC,QAAD,CAAT;AACD;;AAED,iBAAesD,YAAf,CAA4BP,KAA5B,EAAmC;AACjCxC,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAwC,IAAAA,KAAK,CAACC,cAAN;AACA,KAAC,GAAG/C,MAAM,CAACG,KAAX,EAAkB6B,OAAlB,CAA2BxB,IAAD,IAAU;AAClC,UAAI,CAACV,QAAL,EAAe;AACbiC,QAAAA,WAAW,CAACvB,IAAD,EAAOb,SAAP,EAAkBK,MAAM,CAACE,KAAzB,EAAgCN,eAAhC,EAAiDa,gBAAjD,CAAX;AACD,OAFD,MAEO;AACLsB,QAAAA,WAAW,CAACvB,IAAD,EAAOb,SAAP,EAAkBK,MAAM,CAACE,KAAzB,EAAgCN,eAAhC,EAAiDwD,UAAjD,CAAX;AACD;;AACD1B,MAAAA,UAAU,CAAC,MAAM;AACfpB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KATD;AAUAiC,IAAAA,QAAQ,CAACI,cAAT,CAAwB,mBAAxB,EAA6CW,KAA7C;AACA,QAAIC,OAAO,GAAI,kBAAiBvD,MAAM,CAACE,KAAP,CAAaa,OAAb,CAAqB,IAArB,EAA2B,GAA3B,CAAgC,uBAAhE;;AACA,QAAI,CAACjB,QAAL,EAAe;AACbyD,MAAAA,OAAO,GAAI,+BAA8BvD,MAAM,CAACE,KAAM,EAAtD;AACD,KAFD,MAEO;AACLwB,MAAAA,UAAU,CAAC,MAAM3B,SAAS,CAAC,QAAD,CAAhB,EAA4B,IAA5B,CAAV;AACD;;AACD2B,IAAAA,UAAU,CAAC,MAAM9B,eAAe,CAAC2D,OAAD,EAAU,KAAV,EAAiB,KAAjB,CAAtB,EAA+C,IAA/C,CAAV;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIlD,YAAY,IAAI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,EAEIP,QAAQ,IAAI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFhB,EAGI,CAACA,QAAD,IACF;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEG,GAFH,EAGGD,SAHH,CAJF,EAUE;AAAM,IAAA,EAAE,EAAC,mBAAT;AAA6B,IAAA,QAAQ,EAAEwD,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIvD,QAAQ,IACR;AAAO,IAAA,EAAE,EAAC,aAAV;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAiD,IAAA,WAAW,EAAC,sBAA7D;AAAoF,IAAA,QAAQ,EAAE+C,cAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAA+C,IAAA,KAAK,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CAJF,EAKE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAwB,IAAA,KAAK,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,MAAM,EAAC,SALT;AAME,IAAA,QAAQ,EAAEA,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CALF,CAVF,CADF;AA8BD","sourcesContent":["import React, { useState } from 'react';\nimport { LinearProgress } from '@material-ui/core';\n// import { handleFiles } from './Scripts/DragAndDropPhotos';\n\nimport { serverURL } from '../../../../../utils/config';\n\nexport default function AlbumForm({\n  channelId, emitSendMessage, albumName, newAlbum, viewAlbum,\n}) {\n  const [fields, changeFields] = useState(\n    {\n      album: albumName,\n      files: [],\n      originalName: albumName,\n    },\n  );\n  const [showProgress, toggleProgress] = useState(false);\n\n  const uploadFile = async (file, channelId, albumName, emitSendMessage, viewUpdatedAlbum) => {\n    const url = `${serverURL}/api/photos/uploadPhotos`;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('channel', `${channelId}`);\n    let path = `albums/${albumName.replace(/ /g, '-')}`;\n    if (albumName === 'chat') {\n      path = 'chat';\n    }\n    formData.append('album', path);\n\n\n    fetch(url, {\n      method: 'POST',\n      body: formData,\n    })\n      // send the url of image/video to socket to be used for messaging\n      .then((res) => res.json())\n      .then((data) => {\n        if (albumName === 'chat') {\n          emitSendMessage(data.result.url, data.video, data.image);\n        } else {\n          setTimeout(() => {\n            viewUpdatedAlbum();\n          }, 3000);\n        }\n      })\n      .catch((err) => { console.log(err); });\n  };\n\n  const handleFiles = (files, channelId, albumName, emitSendMessage, viewUpdatedAlbum) => {\n    [...files].forEach((file) => {\n      uploadFile(file, channelId, albumName, emitSendMessage, viewUpdatedAlbum);\n    });\n  };\n\n\n  function previewFile(file) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = function () {\n      let img = document.createElement('img');\n      if (file.type === 'video/mp4') {\n        img = document.createElement('video');\n      }\n      img.src = reader.result;\n      document.getElementById('input-display').appendChild(img);\n    };\n  }\n\n  // Handles form events when adding files and\n  // creating a name\n  function handleOnChange(event) {\n    event.preventDefault();\n    if (event.target.name === 'album') {\n      const value = event.target.value.replace(/ /g, '-');\n      changeFields({\n        ...fields,\n        [event.target.name]: value,\n        originalName: event.target.value,\n      });\n    } else {\n      [...event.target.files].forEach(previewFile);\n      changeFields({\n        album: fields.album,\n        files: [...fields.files, event.target.files],\n      });\n    }\n  }\n\n  function viewUpdatedAlbum() {\n    const pathName = albumName.replace(/ /g, '-');\n    console.log(pathName);\n    viewAlbum(`${channelId}/albums/${pathName}`, albumName);\n  }\n\n  function viewAlbums() {\n    viewAlbum('albums');\n  }\n\n  async function handleSubmit(event) {\n    toggleProgress(true);\n    event.preventDefault();\n    [...fields.files].forEach((file) => {\n      if (!newAlbum) {\n        handleFiles(file, channelId, fields.album, emitSendMessage, viewUpdatedAlbum);\n      } else {\n        handleFiles(file, channelId, fields.album, emitSendMessage, viewAlbums);\n      }\n      setTimeout(() => {\n        toggleProgress(false);\n      }, 3000);\n    });\n    document.getElementById('album-upload-form').reset();\n    let message = `ðŸš¨A new album '${fields.album.replace(/-/g, ' ')}' has been uploadedðŸš¨`;\n    if (!newAlbum) {\n      message = `ðŸ‘€ New photos were added to ${fields.album}`;\n    } else {\n      setTimeout(() => viewAlbum('albums'), 3000);\n    }\n    setTimeout(() => emitSendMessage(message, false, false), 3000);\n  }\n\n  return (\n    <div>\n      { showProgress && <LinearProgress /> }\n      { newAlbum && <div className=\"popup-title\">New Album</div> }\n      { !newAlbum && (\n      <div className=\"popup-title-mod\">\n        Adding photos to\n        {' '}\n        {albumName}\n      </div>\n      )}\n      <form id=\"album-upload-form\" onSubmit={handleSubmit}>\n        { newAlbum && (\n          <input id=\"input-album\" type=\"text\" name=\"album\" placeholder=\"Choose an album name\" onChange={handleOnChange} />\n        )}\n        <div id=\"album-submission\"><input className=\"submit-button\" type=\"submit\" value=\"SUBMIT\" /></div>\n        <div id=\"input-display\" value=\"drag\">\n          <input\n            id=\"album-upload\"\n            name=\"files\"\n            type=\"file\"\n            multiple\n            accept=\"image/*\"\n            onChange={handleOnChange}\n          />\n          <div className=\"subtitle\">ADDED MEDIA:</div>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}