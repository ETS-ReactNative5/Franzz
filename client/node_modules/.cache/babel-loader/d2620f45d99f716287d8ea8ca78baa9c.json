{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Modules/Photos/galleryDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Styling/galleryStyling.css';\nimport './Styling/PopUpBoxStyling.css';\nimport PhotoItem from './PhotoItem';\nimport './Styling/imageBox.css';\nimport { serverURL } from '../../../../../utils/config';\nexport default function GalleryDisplay({\n  path,\n  title,\n  isAlbum,\n  addPhotos,\n  openLightboxOnSlide,\n  changeLinks\n}) {\n  const [photos, setPhotos] = useState([]);\n  useEffect(() => {\n    fetch(`${serverURL}/api/photos/getChannelPhotos/${path}`).then(res => res.json()).then(data => data.resources).then(allPhotos => {\n      console.log('allPhotos:', allPhotos);\n      setPhotos(allPhotos);\n    });\n  }, [path]);\n  const allImages = [];\n  let slide = 0;\n  photos.forEach(img => {\n    slide += 1;\n    allImages.push(React.createElement(PhotoItem, {\n      key: img.public_id,\n      publicKey: img.public_id,\n      url: img.url,\n      fileType: img.resource_type,\n      showSlide: openLightboxOnSlide,\n      slide: slide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }); // formats the images for the grid\n\n  const images = [[], [], [], []];\n  let column = 0;\n  allImages.forEach(image => {\n    images[column].push(image);\n\n    if (column === 3) {\n      column = 0;\n    } else {\n      column += 1;\n    }\n  });\n  useEffect(() => {\n    const imageLinks = photos.map(image => image.url);\n    changeLinks(imageLinks);\n  }, [changeLinks, photos]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, title), isAlbum && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"adding-button-mod\",\n    onClick: () => addPhotos('addAlbumPhotos'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"+\")), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, images[0]), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, images[1]), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, images[2]), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, images[3])));\n}","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Modules/Photos/galleryDisplay.js"],"names":["React","useState","useEffect","PhotoItem","serverURL","GalleryDisplay","path","title","isAlbum","addPhotos","openLightboxOnSlide","changeLinks","photos","setPhotos","fetch","then","res","json","data","resources","allPhotos","console","log","allImages","slide","forEach","img","push","public_id","url","resource_type","images","column","image","imageLinks","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Styling/galleryStyling.css';\nimport './Styling/PopUpBoxStyling.css';\nimport PhotoItem from './PhotoItem';\nimport './Styling/imageBox.css';\nimport { serverURL } from '../../../../../utils/config';\n\nexport default function GalleryDisplay({\n  path, title, isAlbum, addPhotos, openLightboxOnSlide, changeLinks,\n}) {\n  const [photos, setPhotos] = useState([]);\n\n  useEffect(() => {\n    fetch(`${serverURL}/api/photos/getChannelPhotos/${path}`)\n      .then((res) => res.json())\n      .then((data) => data.resources)\n      .then((allPhotos) => { console.log('allPhotos:', allPhotos); setPhotos(allPhotos); });\n  }, [path]);\n\n\n  const allImages = [];\n  let slide = 0;\n  photos.forEach((img) => {\n    slide += 1;\n    allImages.push(\n      <PhotoItem\n        key={img.public_id}\n        publicKey={img.public_id}\n        url={img.url}\n        fileType={img.resource_type}\n        showSlide={openLightboxOnSlide}\n        slide={slide}\n      />,\n    );\n  });\n\n\n  // formats the images for the grid\n  const images = [[], [], [], []];\n  let column = 0;\n  allImages.forEach((image) => {\n    images[column].push(image);\n    if (column === 3) {\n      column = 0;\n    } else {\n      column += 1;\n    }\n  });\n\n  useEffect(() => {\n    const imageLinks = photos.map((image) => image.url);\n    changeLinks(imageLinks);\n  }, [changeLinks, photos]);\n\n  return (\n    <div>\n      <div className=\"popup-title\">{title}</div>\n      {isAlbum && <button type=\"button\" className=\"adding-button-mod\" onClick={() => addPhotos('addAlbumPhotos')}><span>+</span></button>}\n      <div className=\"row\">\n        <div className=\"column\">\n          {images[0]}\n        </div>\n        <div className=\"column\">\n          {images[1]}\n        </div>\n        <div className=\"column\">\n          {images[2]}\n        </div>\n        <div className=\"column\">\n          {images[3]}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}