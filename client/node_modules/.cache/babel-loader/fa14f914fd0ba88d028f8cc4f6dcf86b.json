{"ast":null,"code":"import _regeneratorRuntime from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import Modal from'react-bootstrap/Modal';import{useField}from'../../hooks/useField';var PopupToast=function PopupToast(_ref){var emitCreateChannel=_ref.emitCreateChannel,emitJoinChannel=_ref.emitJoinChannel,show=_ref.show,toggleForm=_ref.toggleForm;var channelName=useField('text');var channelLink=useField('text');var handleClose=function handleClose(){return toggleForm(false);};var createChannel=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();emitCreateChannel(channelName.value);channelName.reset();handleClose();case 4:case\"end\":return _context.stop();}}},_callee);}));return function createChannel(_x){return _ref2.apply(this,arguments);};}();var joinChannel=function joinChannel(e){e.preventDefault();emitJoinChannel(channelLink.value);channelLink.reset();handleClose();};return React.createElement(Modal,{className:\"newChannelModal\",show:show,onHide:handleClose},React.createElement(Modal.Header,{closeButton:true},React.createElement(Modal.Title,null,\"New Channel\")),React.createElement(Modal.Body,null,React.createElement(\"div\",{className:\"seperate\"},React.createElement(\"form\",{className:\"createChannelForm\"},React.createElement(\"p\",{style:{textAlign:'center',fontSize:'20px',color:'rgb(60, 163, 116)',margin:'0'}},\"CREATE\"),React.createElement(\"p\",{style:{textAlign:'center',fontSize:'12px'}},\"Create a new server and invite your friends!\"),React.createElement(\"div\",{className:\"createChannelImageContainer\"},React.createElement(\"div\",{className:\"joinChannelImage\"})),React.createElement(\"input\",Object.assign({},channelName,{reset:undefined,placeholder:\"Channel Name\",onKeyPress:function onKeyPress(e){return e.key==='Enter'?createChannel(e):null;}})),React.createElement(\"button\",{className:\"createChannelButton\",type:\"button\",onClick:function onClick(e){return createChannel(e);}},\"Create\")),React.createElement(\"div\",{className:\"divider\"}),React.createElement(\"form\",{className:\"joinChannelForm\"},React.createElement(\"p\",{style:{textAlign:'center',fontSize:'20px',color:'rgb(114, 137, 218)',margin:'0'}},\"JOIN\"),React.createElement(\"p\",{style:{textAlign:'center',fontSize:'12px'}},\"Enter an invite and join your friends server!\"),React.createElement(\"div\",{className:\"createChannelImageContainer\"},React.createElement(\"div\",{className:\"createChannelImage\"})),React.createElement(\"input\",Object.assign({},channelLink,{reset:undefined,placeholder:\"Channel Link\",onKeyPress:function onKeyPress(e){return e.key==='Enter'?joinChannel(e):null;}})),React.createElement(\"button\",{className:\"joinChannelButton\",type:\"button\",onClick:function onClick(e){return joinChannel(e);}},\"Join\")))),React.createElement(Modal.Footer,null));};export default PopupToast;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/PopUpToast.js"],"names":["React","Modal","useField","PopupToast","emitCreateChannel","emitJoinChannel","show","toggleForm","channelName","channelLink","handleClose","createChannel","e","preventDefault","value","reset","joinChannel","textAlign","fontSize","color","margin","undefined","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { useField } from '../../hooks/useField';\n\nconst PopupToast = ({\n  emitCreateChannel, emitJoinChannel, show, toggleForm,\n}) => {\n  const channelName = useField('text');\n  const channelLink = useField('text');\n\n  const handleClose = () => toggleForm(false);\n\n  const createChannel = async (e) => {\n    e.preventDefault();\n    emitCreateChannel(channelName.value);\n    channelName.reset();\n    handleClose();\n  };\n\n  const joinChannel = (e) => {\n    e.preventDefault();\n    emitJoinChannel(channelLink.value);\n    channelLink.reset();\n    handleClose();\n  };\n  return (\n    <Modal className=\"newChannelModal\" show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>New Channel</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"seperate\">\n          <form className=\"createChannelForm\">\n            <p style={{\n              textAlign: 'center', fontSize: '20px', color: 'rgb(60, 163, 116)', margin: '0',\n            }}\n            >\n            CREATE\n            </p>\n            <p style={{ textAlign: 'center', fontSize: '12px' }}>Create a new server and invite your friends!</p>\n            <div className=\"createChannelImageContainer\">\n              <div className=\"joinChannelImage\" />\n            </div>\n            <input\n              {...channelName}\n              reset={undefined}\n              placeholder=\"Channel Name\"\n              onKeyPress={(e) => (e.key === 'Enter' ? createChannel(e) : null)}\n            />\n            <button className=\"createChannelButton\" type=\"button\" onClick={(e) => createChannel(e)}>\n              Create\n            </button>\n          </form>\n          <div className=\"divider\" />\n          <form className=\"joinChannelForm\">\n            <p style={{\n              textAlign: 'center', fontSize: '20px', color: 'rgb(114, 137, 218)', margin: '0',\n            }}\n            >\n              JOIN\n            </p>\n            <p style={{ textAlign: 'center', fontSize: '12px' }}>Enter an invite and join your friends server!</p>\n            <div className=\"createChannelImageContainer\">\n              <div className=\"createChannelImage\" />\n            </div>\n            <input\n              {...channelLink}\n              reset={undefined}\n              placeholder=\"Channel Link\"\n              onKeyPress={(e) => (e.key === 'Enter' ? joinChannel(e) : null)}\n            />\n            <button className=\"joinChannelButton\" type=\"button\" onClick={(e) => joinChannel(e)}>\n              Join\n            </button>\n          </form>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default PopupToast;\n"]},"metadata":{},"sourceType":"module"}