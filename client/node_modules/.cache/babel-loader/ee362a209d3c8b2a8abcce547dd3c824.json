{"ast":null,"code":"import _toConsumableArray from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react/prop-types */import React,{useState}from'react';import ScrollToBottom from'react-scroll-to-bottom';import{LinearProgress}from'@material-ui/core';import Message from'./Message';import{serverURL}from'../../../../../utils/config';import'./TextContainer.css';// Scripting work for adding photos to the cloud through the text container\nimport useChangeHighlightClass from'../../../../../hooks/useHighlightClass';// import { preventDefaults, handleDrop } from '../../Modules/Photos/Scripts/DragAndDropPhotos';\nvar TextContainer=function TextContainer(_ref){var messages=_ref.messages,deleteMessage=_ref.deleteMessage,channelId=_ref.channelId,emitSendMessage=_ref.emitSendMessage,currentUser=_ref.currentUser;// Used to highlight the box when dragging photos in\nvar _useChangeHighlightCl=useChangeHighlightClass(''),highlightClass=_useChangeHighlightCl.highlightClass,changeHighlightClass=_useChangeHighlightCl.changeHighlightClass;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showProgress=_useState2[0],toggleProgress=_useState2[1];var preventDefaults=function preventDefaults(e){e.preventDefault();e.stopPropagation();};var handleDrop=function handleDrop(e,channelId,albumName,emitSendMessage){// get emitsendmessage to be passed through as a function\npreventDefaults(e);var dt=e.dataTransfer;var files=dt.files;handleFiles(files,channelId,albumName,emitSendMessage);};var uploadFile=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file,channelId,albumName,emitSendMessage,viewUpdatedAlbum){var url,formData,path;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"\".concat(serverURL,\"/api/photos/uploadPhotos\");formData=new FormData();formData.append('file',file);formData.append('channel',\"\".concat(channelId));path=\"albums/\".concat(albumName.replace(/ /g,'-'));if(albumName==='chat'){path='chat';}formData.append('album',path);fetch(url,{method:'POST',body:formData})// send the url of image/video to socket to be used for messaging\n.then(function(res){return res.json();}).then(function(data){if(albumName==='chat'){emitSendMessage(data.result.url,data.video,data.image);}else{setTimeout(function(){viewUpdatedAlbum();},3000);}}).catch(function(err){console.log(err);});case 8:case\"end\":return _context.stop();}}},_callee);}));return function uploadFile(_x,_x2,_x3,_x4,_x5){return _ref2.apply(this,arguments);};}();var handleFiles=function handleFiles(files,channelId,albumName,emitSendMessage,viewUpdatedAlbum){_toConsumableArray(files).forEach(function(file){uploadFile(file,channelId,albumName,emitSendMessage,viewUpdatedAlbum);});};var formattedMessages=messages.map(function(msg){return React.createElement(Message,{key:msg.id,id:msg.id,message:msg.message,created:msg.created,username:msg.user.username,currentUser:currentUser,isCurrent:msg.user.id===currentUser,userId:msg.user.id,deleteMessage:deleteMessage,video:msg.video,image:msg.image});});// Changes the class depending on the event\n// and tracks event\nfunction boxEvent(e){changeHighlightClass(e.type);preventDefaults(e);}function dropFile(e){preventDefaults(e);toggleProgress(true);changeHighlightClass(e.type);handleDrop(e,channelId,'chat',emitSendMessage);setTimeout(function(){toggleProgress(false);},2000);}return React.createElement(\"div\",{onDragEnter:boxEvent,onDragLeave:boxEvent,onDragOver:boxEvent,onDrop:dropFile},React.createElement(ScrollToBottom,{id:\"drop-area\",className:\"textContainer \".concat(highlightClass)},formattedMessages),showProgress&&React.createElement(LinearProgress,null));};export default TextContainer;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Channel/Container/Chat/TextContainer.js"],"names":["React","useState","ScrollToBottom","LinearProgress","Message","serverURL","useChangeHighlightClass","TextContainer","messages","deleteMessage","channelId","emitSendMessage","currentUser","highlightClass","changeHighlightClass","showProgress","toggleProgress","preventDefaults","e","preventDefault","stopPropagation","handleDrop","albumName","dt","dataTransfer","files","handleFiles","uploadFile","file","viewUpdatedAlbum","url","formData","FormData","append","path","replace","fetch","method","body","then","res","json","data","result","video","image","setTimeout","catch","err","console","log","forEach","formattedMessages","map","msg","id","message","created","user","username","boxEvent","type","dropFile"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { LinearProgress } from '@material-ui/core';\nimport Message from './Message';\n\nimport { serverURL } from '../../../../../utils/config';\n\nimport './TextContainer.css';\n\n// Scripting work for adding photos to the cloud through the text container\nimport useChangeHighlightClass from '../../../../../hooks/useHighlightClass';\n// import { preventDefaults, handleDrop } from '../../Modules/Photos/Scripts/DragAndDropPhotos';\n\nconst TextContainer = ({\n  messages, deleteMessage, channelId, emitSendMessage, currentUser,\n}) => {\n  // Used to highlight the box when dragging photos in\n  const { highlightClass, changeHighlightClass } = useChangeHighlightClass('');\n  const [showProgress, toggleProgress] = useState(false);\n\n  const preventDefaults = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e, channelId, albumName, emitSendMessage) => {\n    // get emitsendmessage to be passed through as a function\n    preventDefaults(e);\n    const dt = e.dataTransfer;\n    const { files } = dt;\n\n    handleFiles(files, channelId, albumName, emitSendMessage);\n  };\n\n  const uploadFile = async (file, channelId, albumName, emitSendMessage, viewUpdatedAlbum) => {\n    const url = `${serverURL}/api/photos/uploadPhotos`;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('channel', `${channelId}`);\n    let path = `albums/${albumName.replace(/ /g, '-')}`;\n    if (albumName === 'chat') {\n      path = 'chat';\n    }\n    formData.append('album', path);\n\n\n    fetch(url, {\n      method: 'POST',\n      body: formData,\n    })\n      // send the url of image/video to socket to be used for messaging\n      .then((res) => res.json())\n      .then((data) => {\n        if (albumName === 'chat') {\n          emitSendMessage(data.result.url, data.video, data.image);\n        } else {\n          setTimeout(() => {\n            viewUpdatedAlbum();\n          }, 3000);\n        }\n      })\n      .catch((err) => { console.log(err); });\n  };\n\n  const handleFiles = (files, channelId, albumName, emitSendMessage, viewUpdatedAlbum) => {\n    [...files].forEach((file) => {\n      uploadFile(file, channelId, albumName, emitSendMessage, viewUpdatedAlbum);\n    });\n  };\n\n  const formattedMessages = messages.map((msg) => (\n    <Message\n      key={msg.id}\n      id={msg.id}\n      message={msg.message}\n      created={msg.created}\n      username={msg.user.username}\n      currentUser={currentUser}\n      isCurrent={msg.user.id === currentUser}\n      userId={msg.user.id}\n      deleteMessage={deleteMessage}\n      video={msg.video}\n      image={msg.image}\n    />\n  ));\n\n  // Changes the class depending on the event\n  // and tracks event\n  function boxEvent(e) {\n    changeHighlightClass(e.type);\n    preventDefaults(e);\n  }\n\n  function dropFile(e) {\n    preventDefaults(e);\n    toggleProgress(true);\n    changeHighlightClass(e.type);\n    handleDrop(e, channelId, 'chat', emitSendMessage);\n    setTimeout(() => {\n      toggleProgress(false);\n    }, 2000);\n  }\n\n\n  return (\n    <div\n      onDragEnter={boxEvent}\n      onDragLeave={boxEvent}\n      onDragOver={boxEvent}\n      onDrop={dropFile}\n    >\n      <ScrollToBottom\n        id=\"drop-area\"\n        className={`textContainer ${highlightClass}`}\n      >\n        {formattedMessages}\n      </ScrollToBottom>\n      {showProgress && <LinearProgress />}\n    </div>\n  );\n};\n\nexport default TextContainer;\n"]},"metadata":{},"sourceType":"module"}