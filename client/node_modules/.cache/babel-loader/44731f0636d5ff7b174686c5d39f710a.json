{"ast":null,"code":"import _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Canvas/Canvas.js\";\nimport React, { useState, useRef, useEffect } from 'react';\n\nconst Canvas = () => {\n  const canvasRef = useRef(null);\n\n  const _useState = useState('black'),\n        _useState2 = _slicedToArray(_useState, 2),\n        color = _useState2[0],\n        setColor = _useState2[1];\n\n  let context;\n  let drawing = false;\n\n  const _useState3 = useState({\n    x: null,\n    y: null\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        points = _useState4[0],\n        setPoints = _useState4[1];\n\n  useEffect(() => {\n    // Using the useEffect callback function to grab the canvas after render\n    if (canvasRef.current) {\n      context = canvasRef.current.getContext('2d');\n    }\n  }, []);\n\n  const mouseDown = e => {\n    drawing = true;\n    const coords = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    setPoints(coords);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid black'\n    },\n    onMouseDown: mouseDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default Canvas;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Canvas/Canvas.js"],"names":["React","useState","useRef","useEffect","Canvas","canvasRef","color","setColor","context","drawing","x","y","points","setPoints","current","getContext","mouseDown","e","coords","clientX","clientY","border"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;;AADmB,oBAEOD,QAAQ,CAAC,OAAD,CAFf;AAAA;AAAA,QAEZK,KAFY;AAAA,QAELC,QAFK;;AAInB,MAAIC,OAAJ;AACA,MAAIC,OAAO,GAAG,KAAd;;AALmB,qBAOSR,QAAQ,CAAC;AACnCS,IAAAA,CAAC,EAAE,IADgC;AAEnCC,IAAAA,CAAC,EAAE;AAFgC,GAAD,CAPjB;AAAA;AAAA,QAOZC,MAPY;AAAA,QAOJC,SAPI;;AAYnBV,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIE,SAAS,CAACS,OAAd,EAAuB;AACrBN,MAAAA,OAAO,GAAGH,SAAS,CAACS,OAAV,CAAkBC,UAAlB,CAA6B,IAA7B,CAAV;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBR,IAAAA,OAAO,GAAG,IAAV;AACA,UAAMS,MAAM,GAAG;AACbR,MAAAA,CAAC,EAAEO,CAAC,CAACE,OADQ;AAEbR,MAAAA,CAAC,EAAEM,CAAC,CAACG;AAFQ,KAAf;AAIAP,IAAAA,SAAS,CAACK,MAAD,CAAT;AACD,GAPD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEb,SADP;AAEE,IAAA,KAAK,EAAE;AACLgB,MAAAA,MAAM,EAAE;AADH,KAFT;AAKE,IAAA,WAAW,EAAEL,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CAvCD;;AAyCA,eAAeZ,MAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst Canvas = () => {\n  const canvasRef = useRef(null);\n  const [color, setColor] = useState('black');\n\n  let context;\n  let drawing = false;\n\n  const [points, setPoints] = useState({\n    x: null,\n    y: null,\n  });\n\n  useEffect(() => {\n    // Using the useEffect callback function to grab the canvas after render\n    if (canvasRef.current) {\n      context = canvasRef.current.getContext('2d');\n    }\n  }, []);\n\n  const mouseDown = (e) => {\n    drawing = true;\n    const coords = {\n      x: e.clientX,\n      y: e.clientY,\n    }\n    setPoints(coords);\n  };\n\n  return (\n    <div>\n      <canvas\n        ref={canvasRef}\n        style={{\n          border: '1px solid black',\n        }}\n        onMouseDown={mouseDown}\n      />\n    </div>\n  );\n};\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}