{"ast":null,"code":"import _defineProperty from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// eslint-disable-next-line import/prefer-default-export\nexport var useYoutube=function useYoutube(state,setState,socket){var changeVideoState=function changeVideoState(url,channel,paused,played){if(socket){var videoObj={url:url,paused:paused,played:played,channel:channel,authorization:state.authorization};setState(function(prev){return _objectSpread({},prev,{videoStates:_objectSpread({},prev.videoStates,_defineProperty({},channel,{url:url,paused:paused,played:played}))});});socket.emit('change video state',videoObj);}};var syncVideo=function syncVideo(data,channel){if(socket){var timeObj={time:data,channel:channel,authorization:state.authorization};socket.emit('change video time',timeObj);}};return{changeVideoState:changeVideoState,syncVideo:syncVideo};};","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/hooks/useYoutube.js"],"names":["useYoutube","state","setState","socket","changeVideoState","url","channel","paused","played","videoObj","authorization","prev","videoStates","emit","syncVideo","data","timeObj","time"],"mappings":"iPAAA;AACA,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAQC,QAAR,CAAkBC,MAAlB,CAA6B,CACrD,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAMC,OAAN,CAAeC,MAAf,CAAuBC,MAAvB,CAAkC,CACzD,GAAIL,MAAJ,CAAY,CACV,GAAMM,CAAAA,QAAQ,CAAG,CACfJ,GAAG,CAAHA,GADe,CAEfE,MAAM,CAANA,MAFe,CAGfC,MAAM,CAANA,MAHe,CAIfF,OAAO,CAAPA,OAJe,CAKfI,aAAa,CAAET,KAAK,CAACS,aALN,CAAjB,CAOAR,QAAQ,CAAC,SAACS,IAAD,0BACJA,IADI,EAEPC,WAAW,kBACND,IAAI,CAACC,WADC,oBAERN,OAFQ,CAEE,CACTD,GAAG,CAAHA,GADS,CAETE,MAAM,CAANA,MAFS,CAGTC,MAAM,CAANA,MAHS,CAFF,EAFJ,IAAD,CAAR,CAWAL,MAAM,CAACU,IAAP,CAAY,oBAAZ,CAAkCJ,QAAlC,EACD,CACF,CAtBD,CAwBA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAOT,OAAP,CAAmB,CACnC,GAAIH,MAAJ,CAAY,CACV,GAAMa,CAAAA,OAAO,CAAG,CACdC,IAAI,CAAEF,IADQ,CAEdT,OAAO,CAAPA,OAFc,CAGdI,aAAa,CAAET,KAAK,CAACS,aAHP,CAAhB,CAKAP,MAAM,CAACU,IAAP,CAAY,mBAAZ,CAAiCG,OAAjC,EACD,CACF,CATD,CAWA,MAAO,CACLZ,gBAAgB,CAAhBA,gBADK,CAELU,SAAS,CAATA,SAFK,CAAP,CAID,CAxCM","sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const useYoutube = (state, setState, socket) => {\n  const changeVideoState = (url, channel, paused, played) => {\n    if (socket) {\n      const videoObj = {\n        url,\n        paused,\n        played,\n        channel,\n        authorization: state.authorization,\n      };\n      setState((prev) => ({\n        ...prev,\n        videoStates: {\n          ...prev.videoStates,\n          [channel]: {\n            url,\n            paused,\n            played,\n          },\n        },\n      }));\n      socket.emit('change video state', videoObj);\n    }\n  };\n\n  const syncVideo = (data, channel) => {\n    if (socket) {\n      const timeObj = {\n        time: data,\n        channel,\n        authorization: state.authorization,\n      };\n      socket.emit('change video time', timeObj);\n    }\n  };\n\n  return {\n    changeVideoState,\n    syncVideo,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}