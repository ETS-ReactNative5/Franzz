{"ast":null,"code":"import _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Canvas/Canvas.js\";\nimport React, { useState, useRef, useEffect } from 'react';\n\nconst Canvas = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        locations = _useState2[0],\n        setLocation = _useState2[1];\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);\n    locations.forEach(location => draw(ctx, location));\n  });\n  return React.createElement(\"canvas\", {\n    ref: canvasRef,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    onClick: e => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const newLocation = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      setLocation([...locations, newLocation]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n};\n\nexport default Canvas;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Canvas/Canvas.js"],"names":["React","useState","useRef","useEffect","Canvas","locations","setLocation","canvasRef","canvas","current","ctx","getContext","clearRect","window","innerHeight","innerWidth","forEach","location","draw","e","newLocation","x","clientX","y","clientY"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBACcH,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,QACZI,SADY;AAAA,QACDC,WADC;;AAEnB,QAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACAD,IAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,MAAM,CAACC,WAA3B,EAAwCD,MAAM,CAACE,UAA/C;AACAV,IAAAA,SAAS,CAACW,OAAV,CAAmBC,QAAD,IAAcC,IAAI,CAACR,GAAD,EAAMO,QAAN,CAApC;AACD,GALQ,CAAT;AAOA,SACE;AACE,IAAA,GAAG,EAAEV,SADP;AAEE,IAAA,KAAK,EAAEM,MAAM,CAACE,UAFhB;AAGE,IAAA,MAAM,EAAEF,MAAM,CAACC,WAHjB;AAIE,IAAA,OAAO,EAAGK,CAAD,IAAO;AACd,YAAMX,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,YAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,YAAMS,WAAW,GAAG;AAClBC,QAAAA,CAAC,EAAEF,CAAC,CAACG,OADa;AAElBC,QAAAA,CAAC,EAAEJ,CAAC,CAACK;AAFa,OAApB;AAIAlB,MAAAA,WAAW,CAAC,CAAC,GAAGD,SAAJ,EAAee,WAAf,CAAD,CAAX;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBD,CA3BD;;AA6BA,eAAehB,MAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst Canvas = () => {\n  const [locations, setLocation] = useState([]);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);\n    locations.forEach((location) => draw(ctx, location));\n  });\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={window.innerWidth}\n      height={window.innerHeight}\n      onClick={(e) => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const newLocation = {\n          x: e.clientX,\n          y: e.clientY,\n        };\n        setLocation([...locations, newLocation]);\n      }}\n    />\n  );\n};\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}