{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Landing/Login/GoogleLogin.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { GoogleLogin } from 'react-google-login';\nimport auth from '../../../service/authService';\nimport { GOOGLE_CLIENT_ID, serverURL } from '../../../utils/config';\n\nconst GoogleLoginButton = ({\n  setState\n}) => {\n  const onSuccess = googleData => {\n    const {\n      accessToken\n    } = googleData;\n    const config = {\n      headers: {\n        authorization: window.localStorage.authorization\n      }\n    };\n    axios.post(`${serverURL}/api/auth/google`, {\n      accessToken\n    }, config).then(res => {\n      const {\n        success,\n        error,\n        token,\n        username,\n        guest,\n        userID\n      } = res.data;\n\n      if (success) {\n        auth.setLocalStorage({\n          token,\n          username,\n          guest,\n          userID\n        });\n        setState(prev => ({ ...prev,\n          authorization: window.localStorage.getItem('authorization'),\n          username: window.localStorage.getItem('username'),\n          guest: localStorage.getItem('guest'),\n          currentUser: localStorage.getItem('userID')\n        }));\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  const onFailure = err => {\n    console.log(err);\n  };\n\n  return React.createElement(GoogleLogin, {\n    className: \"googleLogin\",\n    clientId: GOOGLE_CLIENT_ID,\n    buttonText: \"Google Login\",\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    cookiePolicy: \"single_host_origin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  });\n};\n\nexport default GoogleLoginButton;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Landing/Login/GoogleLogin.js"],"names":["React","axios","GoogleLogin","auth","GOOGLE_CLIENT_ID","serverURL","GoogleLoginButton","setState","onSuccess","googleData","accessToken","config","headers","authorization","window","localStorage","post","then","res","success","error","token","username","guest","userID","data","setLocalStorage","prev","getItem","currentUser","console","log","onFailure","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,uBAA5C;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAMC,SAAS,GAAIC,UAAD,IAAgB;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,UAAxB;AACA,UAAME,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEC,MAAM,CAACC,YAAP,CAAoBF;AAArC;AADI,KAAf;AAGAZ,IAAAA,KAAK,CACFe,IADH,CACS,GAAEX,SAAU,kBADrB,EACwC;AAAEK,MAAAA;AAAF,KADxC,EACyDC,MADzD,EAEGM,IAFH,CAESC,GAAD,IAAS;AACb,YAAM;AACJC,QAAAA,OADI;AACKC,QAAAA,KADL;AACYC,QAAAA,KADZ;AACmBC,QAAAA,QADnB;AAC6BC,QAAAA,KAD7B;AACoCC,QAAAA;AADpC,UAEFN,GAAG,CAACO,IAFR;;AAGA,UAAIN,OAAJ,EAAa;AACXhB,QAAAA,IAAI,CAACuB,eAAL,CAAqB;AACnBL,UAAAA,KADmB;AACZC,UAAAA,QADY;AACFC,UAAAA,KADE;AACKC,UAAAA;AADL,SAArB;AAGAjB,QAAAA,QAAQ,CAAEoB,IAAD,KAAW,EAClB,GAAGA,IADe;AAElBd,UAAAA,aAAa,EAAEC,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,eAA5B,CAFG;AAGlBN,UAAAA,QAAQ,EAAER,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,UAA5B,CAHQ;AAIlBL,UAAAA,KAAK,EAAER,YAAY,CAACa,OAAb,CAAqB,OAArB,CAJW;AAKlBC,UAAAA,WAAW,EAAEd,YAAY,CAACa,OAAb,CAAqB,QAArB;AALK,SAAX,CAAD,CAAR;AAOD,OAXD,MAWO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD;AACF,KApBH;AAqBD,GA1BD;;AA4BA,QAAMY,SAAS,GAAIC,GAAD,IAAS;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAFD;;AAIA,SACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,QAAQ,EAAE7B,gBAFZ;AAGE,IAAA,UAAU,EAAC,cAHb;AAIE,IAAA,SAAS,EAAEI,SAJb;AAKE,IAAA,SAAS,EAAEwB,SALb;AAME,IAAA,YAAY,EAAC,oBANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CA3CD;;AA6CA,eAAe1B,iBAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { GoogleLogin } from 'react-google-login';\n\nimport auth from '../../../service/authService';\nimport { GOOGLE_CLIENT_ID, serverURL } from '../../../utils/config';\n\nconst GoogleLoginButton = ({ setState }) => {\n  const onSuccess = (googleData) => {\n    const { accessToken } = googleData;\n    const config = {\n      headers: { authorization: window.localStorage.authorization },\n    };\n    axios\n      .post(`${serverURL}/api/auth/google`, { accessToken }, config)\n      .then((res) => {\n        const {\n          success, error, token, username, guest, userID,\n        } = res.data;\n        if (success) {\n          auth.setLocalStorage({\n            token, username, guest, userID,\n          });\n          setState((prev) => ({\n            ...prev,\n            authorization: window.localStorage.getItem('authorization'),\n            username: window.localStorage.getItem('username'),\n            guest: localStorage.getItem('guest'),\n            currentUser: localStorage.getItem('userID'),\n          }));\n        } else {\n          console.log(error);\n        }\n      });\n  };\n\n  const onFailure = (err) => {\n    console.log(err);\n  };\n\n  return (\n    <GoogleLogin\n      className=\"googleLogin\"\n      clientId={GOOGLE_CLIENT_ID}\n      buttonText=\"Google Login\"\n      onSuccess={onSuccess}\n      onFailure={onFailure}\n      cookiePolicy=\"single_host_origin\"\n    />\n  );\n};\n\nexport default GoogleLoginButton;\n"]},"metadata":{},"sourceType":"module"}