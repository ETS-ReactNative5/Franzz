{"ast":null,"code":"import _objectSpread from\"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import axios from'axios';import{GoogleLogin}from'react-google-login';import auth from'../../../service/authService';import{GOOGLE_CLIENT_ID,serverURL}from'../../../utils/config';var GoogleLoginButton=function GoogleLoginButton(_ref){var setState=_ref.setState;var onSuccess=function onSuccess(googleData){var accessToken=googleData.accessToken;var config={headers:{authorization:window.localStorage.authorization}};axios.post(\"\".concat(serverURL,\"/api/auth/google\"),{accessToken:accessToken},config).then(function(res){var _res$data=res.data,success=_res$data.success,error=_res$data.error,token=_res$data.token,username=_res$data.username,guest=_res$data.guest,userID=_res$data.userID;if(success){auth.setLocalStorage({token:token,username:username,guest:guest,userID:userID});setState(function(prev){return _objectSpread({},prev,{authorization:window.localStorage.getItem('authorization'),username:window.localStorage.getItem('username'),guest:localStorage.getItem('guest'),currentUser:localStorage.getItem('userID')});});}else{console.log(error);}});};var onFailure=function onFailure(err){console.log(err);};return React.createElement(GoogleLogin,{className:\"googleLogin\",clientId:GOOGLE_CLIENT_ID,buttonText:\"Google Login\",onSuccess:onSuccess,onFailure:onFailure,cookiePolicy:\"single_host_origin\"});};export default GoogleLoginButton;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Landing/Login/GoogleLogin.js"],"names":["React","axios","GoogleLogin","auth","GOOGLE_CLIENT_ID","serverURL","GoogleLoginButton","setState","onSuccess","googleData","accessToken","config","headers","authorization","window","localStorage","post","then","res","data","success","error","token","username","guest","userID","setLocalStorage","prev","getItem","currentUser","console","log","onFailure","err"],"mappings":"uHAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,oBAA5B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,8BAAjB,CACA,OAASC,gBAAT,CAA2BC,SAA3B,KAA4C,uBAA5C,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC1C,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,UAAD,CAAgB,IACxBC,CAAAA,WADwB,CACRD,UADQ,CACxBC,WADwB,CAEhC,GAAMC,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CAAEC,aAAa,CAAEC,MAAM,CAACC,YAAP,CAAoBF,aAArC,CADI,CAAf,CAGAZ,KAAK,CACFe,IADH,WACWX,SADX,qBACwC,CAAEK,WAAW,CAAXA,WAAF,CADxC,CACyDC,MADzD,EAEGM,IAFH,CAEQ,SAACC,GAAD,CAAS,eAGTA,GAAG,CAACC,IAHK,CAEXC,OAFW,WAEXA,OAFW,CAEFC,KAFE,WAEFA,KAFE,CAEKC,KAFL,WAEKA,KAFL,CAEYC,QAFZ,WAEYA,QAFZ,CAEsBC,KAFtB,WAEsBA,KAFtB,CAE6BC,MAF7B,WAE6BA,MAF7B,CAIb,GAAIL,OAAJ,CAAa,CACXjB,IAAI,CAACuB,eAAL,CAAqB,CACnBJ,KAAK,CAALA,KADmB,CACZC,QAAQ,CAARA,QADY,CACFC,KAAK,CAALA,KADE,CACKC,MAAM,CAANA,MADL,CAArB,EAGAlB,QAAQ,CAAC,SAACoB,IAAD,0BACJA,IADI,EAEPd,aAAa,CAAEC,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,eAA5B,CAFR,CAGPL,QAAQ,CAAET,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,UAA5B,CAHH,CAIPJ,KAAK,CAAET,YAAY,CAACa,OAAb,CAAqB,OAArB,CAJA,CAKPC,WAAW,CAAEd,YAAY,CAACa,OAAb,CAAqB,QAArB,CALN,IAAD,CAAR,CAOD,CAXD,IAWO,CACLE,OAAO,CAACC,GAAR,CAAYV,KAAZ,EACD,CACF,CApBH,EAqBD,CA1BD,CA4BA,GAAMW,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,CAAS,CACzBH,OAAO,CAACC,GAAR,CAAYE,GAAZ,EACD,CAFD,CAIA,MACE,qBAAC,WAAD,EACE,SAAS,CAAC,aADZ,CAEE,QAAQ,CAAE7B,gBAFZ,CAGE,UAAU,CAAC,cAHb,CAIE,SAAS,CAAEI,SAJb,CAKE,SAAS,CAAEwB,SALb,CAME,YAAY,CAAC,oBANf,EADF,CAUD,CA3CD,CA6CA,cAAe1B,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { GoogleLogin } from 'react-google-login';\n\nimport auth from '../../../service/authService';\nimport { GOOGLE_CLIENT_ID, serverURL } from '../../../utils/config';\n\nconst GoogleLoginButton = ({ setState }) => {\n  const onSuccess = (googleData) => {\n    const { accessToken } = googleData;\n    const config = {\n      headers: { authorization: window.localStorage.authorization },\n    };\n    axios\n      .post(`${serverURL}/api/auth/google`, { accessToken }, config)\n      .then((res) => {\n        const {\n          success, error, token, username, guest, userID,\n        } = res.data;\n        if (success) {\n          auth.setLocalStorage({\n            token, username, guest, userID,\n          });\n          setState((prev) => ({\n            ...prev,\n            authorization: window.localStorage.getItem('authorization'),\n            username: window.localStorage.getItem('username'),\n            guest: localStorage.getItem('guest'),\n            currentUser: localStorage.getItem('userID'),\n          }));\n        } else {\n          console.log(error);\n        }\n      });\n  };\n\n  const onFailure = (err) => {\n    console.log(err);\n  };\n\n  return (\n    <GoogleLogin\n      className=\"googleLogin\"\n      clientId={GOOGLE_CLIENT_ID}\n      buttonText=\"Google Login\"\n      onSuccess={onSuccess}\n      onFailure={onFailure}\n      cookiePolicy=\"single_host_origin\"\n    />\n  );\n};\n\nexport default GoogleLoginButton;\n"]},"metadata":{},"sourceType":"module"}