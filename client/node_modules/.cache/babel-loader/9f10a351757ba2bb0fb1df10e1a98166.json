{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Home/Home.js\";\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport channelService from '../../service/channelService';\nimport mapService from '../../service/mapService';\nimport NewChannelModal from './ChannelList/NewChannelModal';\nimport ChannelList from './ChannelList/ChannelList';\nimport Channel from './Channel/Channel';\nimport PopupToast from './PopUpToast';\nimport { useChat } from '../../hooks/useChat';\nimport './homeStyling.css';\nimport '../../styles.css';\nlet socket;\n\nconst Home = ({\n  state,\n  setState\n}) => {\n  const {\n    emitSendMessage,\n    emitJoinChannel,\n    emitCreateChannel\n  } = useChat(state, setState, socket);\n\n  const updateLocation = location => {\n    const locationObj = {\n      location,\n      authorization: state.authorization\n    };\n    socket.emit('update location', locationObj, locations => {\n      console.log(locations);\n      setState(prev => ({ ...prev,\n        locations,\n        center: location\n      }));\n    });\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      console.log('getting location data');\n      navigator.geolocation.watchPosition(position => {\n        const location = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        console.log('navigator watch', location);\n        mapService.getLocation(updateLocation);\n      });\n    }\n  };\n\n  const channels = Object.keys(state.channelStates);\n  const channelIdNamePair = channels.map(id => ({\n    id,\n    name: state.channelStates[id].name\n  }));\n\n  const selectCurrentChannel = channel => {\n    setState(prev => ({ ...prev,\n      currentChannel: channel\n    }));\n  };\n\n  const toggleForm = s => {\n    setState(prev => ({ ...prev,\n      newChannelForm: s\n    }));\n  };\n\n  const channelItems = channels.map(id => {\n    const {\n      name,\n      messages,\n      users\n    } = state.channelStates[id];\n    return React.createElement(Route, {\n      path: `/channel/${id}`,\n      key: `${id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Channel, {\n      channel: id,\n      name: name,\n      messages: messages,\n      userStatus: state.users[id],\n      userList: users,\n      emitSendMessage: emitSendMessage,\n      locations: state.locations[id],\n      center: state.center,\n      currentUser: state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }); // handle initial state\n\n  useEffect(() => {\n    // grab all channel data, messages\n    if (state.authorization) {\n      channelService.getUserData().then(({\n        channelData\n      }) => {\n        const channelStates = channelData.reduce((obj, ele) => {\n          if (!obj[ele.data.channel]) {\n            // eslint-disable-next-line no-param-reassign\n            obj[ele.data.channel] = {\n              users: ele.data.users,\n              name: ele.data.name,\n              channel: ele.data.channel,\n              messages: ele.messages\n            };\n          }\n\n          return obj;\n        }, {});\n        setState(prev => ({ ...prev,\n          channelStates,\n          currentChannel: Object.keys(channelStates)[0]\n        }));\n      });\n    } // change api end point later\n\n\n    socket = io('http://localhost:8001/'); // socket = io('https://arcane-bastion-72484.herokuapp.com/');\n\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', data => {\n        console.log(data);\n      });\n      socket.emit('join channels', {\n        authorization: state.authorization\n      }, data => {\n        console.log(data);\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Sorry to hoever needs to debug this\n  // this is hack - vasily\n\n  useEffect(() => {\n    if (!state.currentChannelLoaded) {\n      setState(prev => ({ ...prev,\n        currentChannelLoaded: true\n      }));\n    } else {\n      setState(prev => ({ ...prev,\n        loaded: true\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [state.currentChannel]);\n  useEffect(() => {\n    mapService.getLocation(updateLocation);\n    getLocation();\n    socket.on('new message', data => {\n      const {\n        channelID,\n        newMessageObj\n      } = data;\n\n      if (channelID && newMessageObj) {\n        setState(prev => ({ ...prev,\n          channelStates: { ...prev.channelStates,\n            [channelID]: { ...prev.channelStates[channelID],\n              messages: prev.channelStates[channelID].messages.concat(newMessageObj)\n            }\n          }\n        }));\n      }\n    });\n    socket.on('user status', ({\n      userStatus\n    }) => {\n      const {\n        channel,\n        users\n      } = userStatus;\n      console.log('status', channel, users);\n      setState(prev => ({ ...prev,\n        users: { ...prev.users,\n          [channel]: users\n        }\n      }));\n    });\n    socket.on('update location', updatedLocations => {\n      console.log('updatedLocations', updatedLocations);\n\n      if (updatedLocations) {\n        setState(prev => ({ ...prev,\n          locations: { ...prev.locations,\n            ...updatedLocations\n          }\n        }));\n      }\n    });\n    return () => {\n      socket.off();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    id: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(ChannelList, {\n    selectCurrentChannel: selectCurrentChannel,\n    channelIdNamePair: channelIdNamePair,\n    emitJoinChannel: emitJoinChannel,\n    emitCreateChannel: emitCreateChannel,\n    toggleForm: toggleForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, channelItems), state.loaded && !state.currentChannel && React.createElement(NewChannelModal, {\n    emitCreateChannel: emitCreateChannel,\n    emitJoinChannel: emitJoinChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(PopupToast, {\n    show: state.newChannelForm,\n    toggleForm: toggleForm,\n    emitCreateChannel: emitCreateChannel,\n    emitJoinChannel: emitJoinChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    exact: true,\n    from: \"/home\",\n    to: `/channel/${state.currentChannel}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Home/Home.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","Redirect","io","channelService","mapService","NewChannelModal","ChannelList","Channel","PopupToast","useChat","socket","Home","state","setState","emitSendMessage","emitJoinChannel","emitCreateChannel","updateLocation","location","locationObj","authorization","emit","locations","console","log","prev","center","getLocation","navigator","geolocation","watchPosition","position","lat","coords","latitude","lng","longitude","channels","Object","keys","channelStates","channelIdNamePair","map","id","name","selectCurrentChannel","channel","currentChannel","toggleForm","s","newChannelForm","channelItems","messages","users","currentUser","getUserData","then","channelData","reduce","obj","ele","data","on","currentChannelLoaded","loaded","channelID","newMessageObj","concat","userStatus","updatedLocations","off"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport io from 'socket.io-client';\n\nimport channelService from '../../service/channelService';\nimport mapService from '../../service/mapService';\n\nimport NewChannelModal from './ChannelList/NewChannelModal';\nimport ChannelList from './ChannelList/ChannelList';\nimport Channel from './Channel/Channel';\nimport PopupToast from './PopUpToast';\n\nimport { useChat } from '../../hooks/useChat';\n\nimport './homeStyling.css';\nimport '../../styles.css';\n\nlet socket;\n\nconst Home = ({ state, setState }) => {\n  const {\n    emitSendMessage,\n    emitJoinChannel,\n    emitCreateChannel,\n  } = useChat(state, setState, socket);\n\n  const updateLocation = (location) => {\n    const locationObj = {\n      location,\n      authorization: state.authorization,\n    };\n    socket.emit('update location', locationObj, (locations) => {\n      console.log(locations);\n      setState((prev) => ({\n        ...prev,\n        locations,\n        center: location,\n      }));\n    });\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      console.log('getting location data');\n      navigator.geolocation.watchPosition((position) => {\n        const location = { lat: position.coords.latitude, lng: position.coords.longitude };\n        console.log('navigator watch', location);\n        mapService.getLocation(updateLocation);\n      });\n    }\n  };\n\n  const channels = Object.keys(state.channelStates);\n  const channelIdNamePair = channels.map((id) => ({ id, name: state.channelStates[id].name }));\n\n  const selectCurrentChannel = (channel) => {\n    setState((prev) => ({ ...prev, currentChannel: channel }));\n  };\n\n  const toggleForm = (s) => {\n    setState((prev) => ({ ...prev, newChannelForm: s }));\n  };\n\n  const channelItems = channels.map((id) => {\n    const { name, messages, users } = state.channelStates[id];\n    return (\n      <Route\n        path={`/channel/${id}`}\n        key={`${id}`}\n      >\n        <Channel\n          channel={id}\n          name={name}\n          messages={messages}\n          userStatus={state.users[id]}\n          userList={users}\n          emitSendMessage={emitSendMessage}\n          locations={state.locations[id]}\n          center={state.center}\n          currentUser={state.currentUser}\n        />\n      </Route>\n    );\n  });\n\n\n  // handle initial state\n  useEffect(() => {\n    // grab all channel data, messages\n    if (state.authorization) {\n      channelService\n        .getUserData()\n        .then(({ channelData }) => {\n          const channelStates = channelData.reduce((obj, ele) => {\n            if (!obj[ele.data.channel]) {\n              // eslint-disable-next-line no-param-reassign\n              obj[ele.data.channel] = {\n                users: ele.data.users,\n                name: ele.data.name,\n                channel: ele.data.channel,\n                messages: ele.messages,\n              };\n            }\n            return obj;\n          }, {});\n          setState((prev) => ({\n            ...prev,\n            channelStates,\n            currentChannel: Object.keys(channelStates)[0],\n          }));\n        });\n    }\n    // change api end point later\n    socket = io('http://localhost:8001/');\n    // socket = io('https://arcane-bastion-72484.herokuapp.com/');\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', (data) => {\n        console.log(data);\n      });\n      socket.emit('join channels', { authorization: state.authorization }, (data) => {\n        console.log(data);\n      });\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Sorry to hoever needs to debug this\n  // this is hack - vasily\n  useEffect(() => {\n    if (!state.currentChannelLoaded) {\n      setState((prev) => ({ ...prev, currentChannelLoaded: true }));\n    } else {\n      setState((prev) => ({ ...prev, loaded: true }));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.currentChannel]);\n\n  useEffect(() => {\n    mapService.getLocation(updateLocation);\n    getLocation();\n\n    socket.on('new message', (data) => {\n      const { channelID, newMessageObj } = data;\n      if (channelID && newMessageObj) {\n        setState((prev) => (\n          {\n            ...prev,\n            channelStates: {\n              ...prev.channelStates,\n              [channelID]: {\n                ...prev.channelStates[channelID],\n                messages: prev.channelStates[channelID].messages.concat(newMessageObj),\n              },\n            },\n          }));\n      }\n    });\n\n    socket.on('user status', ({ userStatus }) => {\n      const { channel, users } = userStatus;\n      console.log('status', channel, users)\n      setState((prev) => ({\n        ...prev,\n        users: {\n          ...prev.users,\n          [channel]: users,\n        },\n      }));\n    });\n\n    socket.on('update location', (updatedLocations) => {\n      console.log('updatedLocations', updatedLocations);\n      if (updatedLocations) {\n        setState((prev) => ({\n          ...prev,\n          locations: {\n            ...prev.locations,\n            ...updatedLocations,\n          },\n        }));\n      }\n    });\n\n    return () => {\n      socket.off();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div id=\"main-container\">\n      <Router>\n        <ChannelList\n          selectCurrentChannel={selectCurrentChannel}\n          channelIdNamePair={channelIdNamePair}\n          emitJoinChannel={emitJoinChannel}\n          emitCreateChannel={emitCreateChannel}\n          toggleForm={toggleForm}\n        />\n        <Switch>\n          {channelItems}\n        </Switch>\n        {state.loaded && !state.currentChannel && (\n        <NewChannelModal\n          emitCreateChannel={emitCreateChannel}\n          emitJoinChannel={emitJoinChannel}\n        />\n        )}\n        <PopupToast\n          show={state.newChannelForm}\n          toggleForm={toggleForm}\n          emitCreateChannel={emitCreateChannel}\n          emitJoinChannel={emitJoinChannel}\n        />\n        <Redirect exact from=\"/home\" to={`/channel/${state.currentChannel}`} />\n      </Router>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}